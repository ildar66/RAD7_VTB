CREATE TABLE NULLID.MVIEW$_ADV_PARTITION (
		RUNID# NUMBER NOT NULL,
		RANK# NUMBER NOT NULL,
		SUMMARY_OWNER VARCHAR2(32),
		QUERY_TEXT LONG
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_EXCEPTIONS (
		RUNID# NUMBER,
		OWNER VARCHAR2(30),
		TABLE_NAME VARCHAR2(30),
		DIMENSION_NAME VARCHAR2(30),
		RELATIONSHIP VARCHAR2(11),
		BAD_ROWID ROWID
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_RESOLUTION (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		CONFLICT_TYPE_ID NUMBER NOT NULL,
		REFERENCE_NAME VARCHAR2(30) NOT NULL,
		SEQUENCE_NO NUMBER NOT NULL,
		METHOD_NAME VARCHAR2(80) NOT NULL,
		FUNCTION_NAME VARCHAR2(92) NOT NULL,
		PRIORITY_GROUP VARCHAR2(30),
		RESOLUTION_COMMENT VARCHAR2(80)
	)
	LOGGING;

CREATE TABLE NULLID.MESSAGE (
		IDMESSAGE NUMBER NOT NULL,
		MFROM VARCHAR2(64) NOT NULL,
		MTO VARCHAR2(64) NOT NULL,
		MSUBJECT VARCHAR2(256),
		MESSAGE VARCHAR2(2048),
		MTIMESTAMP TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP NOT NULL,
		ISREAD NUMBER DEFAULT 0 NOT NULL,
		MFROMFULL VARCHAR2(256) NOT NULL,
		MTOFULL VARCHAR2(256) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.DEPARTMENTS (
		ID_DEPARTMENT NUMBER NOT NULL,
		SHORTNAME VARCHAR2(256),
		FULLNAME VARCHAR2(1024)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_REPGROUP_PRIVS (
		USERID NUMBER,
		USERNAME VARCHAR2(30) NOT NULL,
		GOWNER VARCHAR2(30),
		GNAME VARCHAR2(30),
		GLOBAL_FLAG NUMBER NOT NULL,
		CREATED DATE NOT NULL,
		PRIVILEGE NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_COLTYPE$ (
		COL# NUMBER(22 , 0),
		INTCOL# NUMBER(22 , 0),
		TOID RAW(16),
		VERSION# NUMBER(22 , 0),
		INTCOLS NUMBER(22 , 0),
		TYPIDCOL# NUMBER(22 , 0),
		OBJ# NUMBER(22 , 0),
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_FLAVOR_OBJECTS (
		FLAVOR_ID NUMBER NOT NULL,
		GOWNER VARCHAR2(30) DEFAULT 'PUBLIC' NOT NULL,
		GNAME VARCHAR2(30) NOT NULL,
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		TYPE NUMBER NOT NULL,
		VERSION# NUMBER,
		HASHCODE RAW(17),
		COLUMNS_PRESENT RAW(125)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_RESOL_STATS_CONTROL (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		CREATED DATE NOT NULL,
		STATUS NUMBER NOT NULL,
		STATUS_UPDATE_DATE DATE NOT NULL,
		PURGED_DATE DATE,
		LAST_PURGE_START_DATE DATE,
		LAST_PURGE_END_DATE DATE
	)
	LOGGING;

CREATE TABLE NULLID.AQ$_INTERNET_AGENT_PRIVS (
		AGENT_NAME VARCHAR2(30) NOT NULL,
		DB_USERNAME VARCHAR2(30) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_UID$ (
		LOGMNR_UID NUMBER(22 , 0),
		SESSION# NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_ICOL$ (
		OBJ# NUMBER,
		BO# NUMBER,
		COL# NUMBER,
		POS# NUMBER,
		SEGCOL# NUMBER,
		INTCOL# NUMBER,
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.DEF$_LOB (
		ID RAW(16) NOT NULL,
		ENQ_TID VARCHAR2(22),
		BLOB_COL BLOB,
		CLOB_COL CLOB,
		NCLOB_COL NCLOB
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_LOG$ (
		SESSION# NUMBER NOT NULL,
		THREAD# NUMBER NOT NULL,
		SEQUENCE# NUMBER NOT NULL,
		FIRST_CHANGE# NUMBER,
		NEXT_CHANGE# NUMBER,
		FIRST_TIME DATE,
		NEXT_TIME DATE,
		FILE_NAME VARCHAR2(513),
		STATUS NUMBER,
		INFO VARCHAR2(32),
		TIMESTAMP DATE
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_SQLDEPEND (
		COLLECTIONID# NUMBER,
		INST_ID NUMBER,
		FROM_ADDRESS RAW(16),
		FROM_HASH NUMBER,
		TO_OWNER VARCHAR2(64),
		TO_NAME VARCHAR2(1000),
		TO_TYPE NUMBER,
		CARDINALITY NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.DEF$_DEFAULTDEST (
		DBLINK VARCHAR2(128) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.USERBANK (
		NID NUMBER NOT NULL,
		VLOGIN VARCHAR2(255) NOT NULL,
		VPASSWORD VARCHAR2(255) NOT NULL,
		VNAME VARCHAR2(255) NOT NULL,
		VSURNAME VARCHAR2(255) NOT NULL,
		NACCESS NUMBER NOT NULL,
		NID_ROLES NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_AUDIT_COLUMN (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		COLUMN_NAME VARCHAR2(30) NOT NULL,
		BASE_SNAME VARCHAR2(30) NOT NULL,
		BASE_ONAME VARCHAR2(30) NOT NULL,
		BASE_CONFLICT_TYPE_ID NUMBER NOT NULL,
		BASE_REFERENCE_NAME VARCHAR2(30) NOT NULL,
		ATTRIBUTE VARCHAR2(30) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.FB_ABS_ADDRESS (
		ACCOUNTID CHAR(12) NOT NULL,
		ADDRESS VARCHAR2(128),
		CITY VARCHAR2(32),
		COUNTRY VARCHAR2(32),
		COUNTY VARCHAR2(32),
		POSTALCODE VARCHAR2(24),
		DESCRIPTION VARCHAR2(64),
		FB_ABS_ADDRESSID CHAR(12),
		MODIFYDATE DATE,
		MODIFYUSER CHAR(12),
		CREATEDATE DATE,
		CREATEUSER CHAR(12)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_RUNTIME_PARMS (
		RUNTIME_PARM_ID NUMBER,
		PARAMETER_NAME VARCHAR2(30),
		PARM_VALUE CLOB
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_FILTERINSTANCE (
		RUNID# NUMBER NOT NULL,
		FILTERID# NUMBER,
		SUBFILTERNUM# NUMBER,
		SUBFILTERTYPE NUMBER,
		STR_VALUE VARCHAR2(1028),
		NUM_VALUE1 NUMBER,
		NUM_VALUE2 NUMBER,
		DATE_VALUE1 DATE,
		DATE_VALUE2 DATE
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_LEVEL (
		RUNID# NUMBER NOT NULL,
		LEVELID# NUMBER NOT NULL,
		DIMOBJ# NUMBER,
		FLAGS NUMBER NOT NULL,
		TBLOBJ# NUMBER NOT NULL,
		COLUMNLIST RAW(70) NOT NULL,
		LEVELNAME VARCHAR2(30)
	)
	LOGGING;

CREATE TABLE NULLID.MANAGERS (
		ID_MANAGER NUMBER NOT NULL,
		FIO VARCHAR2(128) NOT NULL,
		REASON VARCHAR2(128),
		POSITION VARCHAR2(128),
		ID_CONTRACTOR NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_COLUMN_GROUP (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		GROUP_NAME VARCHAR2(30) NOT NULL,
		GROUP_COMMENT VARCHAR2(80)
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_PARAMETERS (
		PARAMETER_NAME VARCHAR2(30) NOT NULL,
		PARAMETER_TYPE NUMBER NOT NULL,
		STRING_VALUE VARCHAR2(30),
		DATE_VALUE DATE,
		NUMERICAL_VALUE NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_REPOBJECT (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		TYPE NUMBER NOT NULL,
		VERSION# NUMBER,
		HASHCODE RAW(17),
		ID NUMBER,
		OBJECT_COMMENT VARCHAR2(80),
		STATUS NUMBER,
		GENPACKAGE NUMBER,
		GENPLOGID NUMBER,
		GENTRIGGER NUMBER,
		GENTLOGID NUMBER,
		GOWNER VARCHAR2(30),
		GNAME VARCHAR2(30),
		FLAG RAW(4) DEFAULT 00000000
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_TAB$ (
		TS# NUMBER(22 , 0),
		COLS NUMBER(22 , 0),
		PROPERTY NUMBER(22 , 0),
		INTCOLS NUMBER(22 , 0),
		OBJ# NUMBER(22 , 0),
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_PRIORITY_GROUP (
		SNAME VARCHAR2(30) NOT NULL,
		PRIORITY_GROUP VARCHAR2(30) NOT NULL,
		DATA_TYPE_ID NUMBER NOT NULL,
		FIXED_DATA_LENGTH NUMBER,
		PRIORITY_COMMENT VARCHAR2(80)
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_USER$ (
		USER# NUMBER(22 , 0),
		NAME VARCHAR2(30),
		LOGMNR_UID NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.ACCOUNT (
		ACCOUNTID CHAR(12) NOT NULL,
		TYPE VARCHAR2(64),
		ACCOUNT VARCHAR2(128),
		DIVISION VARCHAR2(64),
		SICCODE VARCHAR2(64),
		PARENTID CHAR(12),
		DESCRIPTION VARCHAR2(128),
		ADDRESSID CHAR(12),
		SHIPPINGID CHAR(12),
		REGION VARCHAR2(64),
		MAINPHONE VARCHAR2(32),
		ALTERNATEPHONE VARCHAR2(32),
		FAX VARCHAR2(32),
		TOLLFREE VARCHAR2(32),
		TOLLFREE2 VARCHAR2(32),
		OTHERPHONE1 VARCHAR2(32),
		OTHERPHONE2 VARCHAR2(32),
		OTHERPHONE3 VARCHAR2(32),
		EMAIL VARCHAR2(128),
		EMAILTYPE VARCHAR2(64),
		WEBADDRESS VARCHAR2(128),
		SECCODEID CHAR(12) NOT NULL,
		REVENUE NUMBER,
		EMPLOYEES NUMBER,
		INDUSTRY VARCHAR2(1000),
		CREDITRATING VARCHAR2(10),
		NOTES CLOB,
		STATUS VARCHAR2(64),
		ACCOUNTMANAGERID CHAR(12),
		REGIONALMANAGERID CHAR(12),
		DIVISIONALMANAGERID CHAR(12),
		NATIONALACCOUNT CHAR(1),
		TARGETACCOUNT CHAR(1),
		TERRITORY VARCHAR2(64),
		CREATEUSER CHAR(12),
		MODIFYUSER CHAR(12),
		CREATEDATE DATE,
		MODIFYDATE DATE,
		ACCOUNT_UC VARCHAR2(128),
		AKA VARCHAR2(128),
		CURRENCYCODE VARCHAR2(64),
		INTERNALACCOUNTNO VARCHAR2(32),
		EXTERNALACCOUNTNO VARCHAR2(32),
		PARENTACCOUNTNO VARCHAR2(32),
		ALTERNATEKEYPREFIX VARCHAR2(8),
		ALTERNATEKEYSUFFIX VARCHAR2(24),
		DEFAULTTICKETSECCODEID CHAR(12),
		NOTIFYDEFECTS CHAR(1),
		NOTIFYONCLOSE CHAR(1),
		NOTIFYONSTATUS CHAR(1),
		SHORTNOTES VARCHAR2(255),
		USERFIELD1 VARCHAR2(80),
		USERFIELD2 VARCHAR2(80),
		USERFIELD3 VARCHAR2(80),
		USERFIELD4 VARCHAR2(80),
		USERFIELD5 VARCHAR2(80),
		USERFIELD6 VARCHAR2(80),
		USERFIELD7 VARCHAR2(80),
		USERFIELD8 VARCHAR2(80),
		USERFIELD9 VARCHAR2(80),
		USERFIELD10 VARCHAR2(80),
		CAMPAIGNID CHAR(12),
		DONOTSOLICIT CHAR(1),
		SCORE VARCHAR2(32),
		TICKER VARCHAR2(16),
		SUBTYPE VARCHAR2(64),
		LEADSOURCEID CHAR(12),
		IMPORTSOURCE VARCHAR2(24),
		ENGINEERID CHAR(12),
		SALESENGINEERID CHAR(12),
		RELATIONSHIP NUMBER,
		LASTHISTORYBY CHAR(12),
		LASTHISTORYDATE DATE,
		BUSINESSDESCRIPTION VARCHAR2(2000),
		WEBADDRESS2 VARCHAR2(128),
		WEBADDRESS3 VARCHAR2(128),
		WEBADDRESS4 VARCHAR2(128),
		TOGROUP VARCHAR2(1)
	)
	LOGGING;

CREATE TABLE NULLID.APPFILES (
		UNID VARCHAR2(128) NOT NULL,
		FILENAME VARCHAR2(256),
		FILEDATA BLOB,
		FILETYPE VARCHAR2(256),
		ID_OWNER NUMBER,
		OWNER_TYPE NUMBER,
		WHO_ADD NUMBER,
		DATE_OF_ADDITION DATE,
		DATE_OF_EXPIRATION DATE,
		ISACCEPTED NUMBER,
		WHOACCEPTED NUMBER,
		DATE_OF_ACCEPT DATE,
		SIGNATURE BLOB,
		ID_APPL NUMBER,
		ID_GROUP NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_DICTIONARY$ (
		DB_NAME VARCHAR2(9),
		DB_ID NUMBER(20 , 0),
		DB_CREATED VARCHAR2(20),
		DB_DICT_CREATED VARCHAR2(20),
		DB_DICT_SCN NUMBER(22 , 0),
		DB_THREAD_MAP RAW(8),
		DB_TXN_SCNBAS NUMBER(22 , 0),
		DB_TXN_SCNWRP NUMBER(22 , 0),
		DB_RESETLOGS_CHANGE# NUMBER(22 , 0),
		DB_RESETLOGS_TIME VARCHAR2(20),
		DB_VERSION_TIME VARCHAR2(20),
		DB_REDO_TYPE_ID VARCHAR2(8),
		DB_REDO_RELEASE VARCHAR2(60),
		DB_CHARACTER_SET VARCHAR2(30),
		DB_VERSION VARCHAR2(64),
		DB_STATUS VARCHAR2(64),
		DB_DICT_MAXOBJECTS NUMBER(22 , 0),
		DB_DICT_OBJECTCOUNT NUMBER(22 , 0),
		LOGMNR_UID NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.HELP (
		TOPIC VARCHAR2(50) NOT NULL,
		SEQ NUMBER NOT NULL,
		INFO VARCHAR2(80)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_REPCAT (
		GOWNER VARCHAR2(30) DEFAULT 'PUBLIC' NOT NULL,
		SNAME VARCHAR2(30) NOT NULL,
		MASTER VARCHAR2(1),
		STATUS NUMBER,
		SCHEMA_COMMENT VARCHAR2(80),
		FLAVOR_ID NUMBER,
		FLAG RAW(4) DEFAULT 00000000
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_OBJECT_TYPES (
		OBJECT_TYPE_ID NUMBER NOT NULL,
		OBJECT_TYPE_NAME VARCHAR2(200),
		FLAGS RAW(255),
		SPARE1 VARCHAR2(4000)
	)
	LOGGING;

CREATE TABLE NULLID.SEQUENCES (
		ID VARCHAR2(50) NOT NULL,
		VALUE NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.STOP_FACTORS (
		ID_STOP_FACTOR NUMBER NOT NULL,
		NAME_STOP_FACTORS VARCHAR2(1024),
		IS_ACIVATE NUMBER DEFAULT 1,
		ID_STOP_FACTORS_GROUPS NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.OWNERSHIP_FORM_TYPE (
		ID_OWNERSHIP_FORM_TYPE NUMBER NOT NULL,
		NAME_OWNERSHIP_FORM_TYPE VARCHAR2(512),
		CODE_OKOPF NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_INSTANTIATION_DDL (
		REFRESH_TEMPLATE_ID NUMBER NOT NULL,
		DDL_TEXT CLOB,
		DDL_NUM NUMBER NOT NULL,
		PHASE NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.LIMIT_TYPE (
		ID_LIMIT_TYPE NUMBER NOT NULL,
		NAME_LIMIT_TYPE VARCHAR2(128)
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_CCOL$ (
		CON# NUMBER,
		OBJ# NUMBER,
		COL# NUMBER,
		POS# NUMBER,
		INTCOL# NUMBER,
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_TYPE$ (
		VERSION# NUMBER(22 , 0),
		TVOID RAW(16),
		PROPERTIES NUMBER(22 , 0),
		ATTRIBUTES NUMBER(22 , 0),
		TOID RAW(16),
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.WM$UDTRIG_INFO (
		TRIG_OWNER_NAME VARCHAR2(50) NOT NULL,
		TRIG_NAME VARCHAR2(50) NOT NULL,
		TABLE_OWNER_NAME VARCHAR2(50),
		TABLE_NAME VARCHAR2(50),
		TRIG_TYPE VARCHAR2(3),
		STATUS VARCHAR2(10),
		TRIG_PROCEDURE VARCHAR2(50),
		WHEN_CLAUSE VARCHAR2(4000),
		DESCRIPTION VARCHAR2(4000),
		TRIG_CODE LONG
	)
	LOGGING;

CREATE TABLE NULLID.APPLICATIONS (
		IDAPPLICATION NUMBER NOT NULL,
		CLIENTNAME VARCHAR2(256),
		CLIENTADDRESS VARCHAR2(256)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_REPCATLOG (
		VERSION NUMBER,
		ID NUMBER NOT NULL,
		SOURCE VARCHAR2(128) NOT NULL,
		USERID VARCHAR2(30),
		TIMESTAMP DATE,
		ROLE VARCHAR2(1) NOT NULL,
		MASTER VARCHAR2(128) NOT NULL,
		SNAME VARCHAR2(30),
		REQUEST NUMBER,
		ONAME VARCHAR2(30),
		TYPE NUMBER,
		A_COMMENT VARCHAR2(2000),
		BOOL_ARG VARCHAR2(1),
		ANO_BOOL_ARG VARCHAR2(1),
		INT_ARG NUMBER,
		ANO_INT_ARG NUMBER,
		LINES NUMBER,
		STATUS NUMBER,
		MESSAGE VARCHAR2(200),
		ERRNUM NUMBER,
		GNAME VARCHAR2(30)
	)
	LOGGING;

CREATE TABLE NULLID.PLAN_TABLE (
		STATEMENT_ID VARCHAR2(30),
		PLAN_ID NUMBER,
		TIMESTAMP DATE,
		REMARKS VARCHAR2(4000),
		OPERATION VARCHAR2(30),
		OPTIONS VARCHAR2(255),
		OBJECT_NODE VARCHAR2(128),
		OBJECT_OWNER VARCHAR2(30),
		OBJECT_NAME VARCHAR2(30),
		OBJECT_ALIAS VARCHAR2(65),
		OBJECT_INSTANCE NUMBER,
		OBJECT_TYPE VARCHAR2(30),
		OPTIMIZER VARCHAR2(255),
		SEARCH_COLUMNS NUMBER,
		ID NUMBER,
		PARENT_ID NUMBER,
		DEPTH NUMBER,
		POSITION NUMBER,
		COST NUMBER,
		CARDINALITY NUMBER,
		BYTES NUMBER,
		OTHER_TAG VARCHAR2(255),
		PARTITION_START VARCHAR2(255),
		PARTITION_STOP VARCHAR2(255),
		PARTITION_ID NUMBER,
		OTHER LONG,
		DISTRIBUTION VARCHAR2(30),
		CPU_COST NUMBER,
		IO_COST NUMBER,
		TEMP_SPACE NUMBER,
		ACCESS_PREDICATES VARCHAR2(4000),
		FILTER_PREDICATES VARCHAR2(4000),
		PROJECTION VARCHAR2(4000),
		TIME NUMBER,
		QBLOCK_NAME VARCHAR2(30)
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_TEMP (
		ID# NUMBER,
		SEQ# NUMBER,
		TEXT LONG
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_OUTPUT (
		RUNID# NUMBER NOT NULL,
		OUTPUT_TYPE NUMBER NOT NULL,
		RANK# NUMBER NOT NULL,
		ACTION_TYPE VARCHAR2(6),
		SUMMARY_OWNER VARCHAR2(30),
		SUMMARY_NAME VARCHAR2(30),
		GROUP_BY_COLUMNS VARCHAR2(2000),
		WHERE_CLAUSE VARCHAR2(2000),
		FROM_CLAUSE VARCHAR2(2000),
		MEASURES_LIST VARCHAR2(2000),
		FACT_TABLES VARCHAR2(1000),
		GROUPING_LEVELS VARCHAR2(2000),
		QUERYLEN NUMBER,
		QUERY_TEXT LONG,
		STORAGE_IN_BYTES NUMBER,
		PCT_PERFORMANCE_GAIN NUMBER,
		FREQUENCY NUMBER,
		CUMULATIVE_BENEFIT NUMBER,
		BENEFIT_TO_COST_RATIO NUMBER NOT NULL,
		VALIDATED NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_TEMPLATE_SITES (
		TEMPLATE_SITE_ID NUMBER NOT NULL,
		REFRESH_TEMPLATE_NAME VARCHAR2(30) NOT NULL,
		REFRESH_GROUP_NAME VARCHAR2(30),
		TEMPLATE_OWNER VARCHAR2(30),
		USER_NAME VARCHAR2(30) NOT NULL,
		SITE_NAME VARCHAR2(128),
		REPAPI_SITE_ID NUMBER,
		STATUS NUMBER NOT NULL,
		REFRESH_TEMPLATE_ID NUMBER,
		USER_ID NUMBER,
		INSTANTIATION_DATE DATE
	)
	LOGGING;

CREATE TABLE NULLID.DEF$_AQCALL (
		Q_NAME VARCHAR2(30),
		MSGID RAW(16),
		CORRID VARCHAR2(128),
		PRIORITY NUMBER,
		STATE NUMBER,
		DELAY DATE,
		EXPIRATION NUMBER,
		TIME_MANAGER_INFO DATE,
		LOCAL_ORDER_NO NUMBER,
		CHAIN_NO NUMBER,
		CSCN NUMBER,
		DSCN NUMBER,
		ENQ_TIME DATE,
		ENQ_UID NUMBER,
		ENQ_TID VARCHAR2(30) NOT NULL,
		DEQ_TIME DATE,
		DEQ_UID NUMBER,
		DEQ_TID VARCHAR2(30),
		RETRY_COUNT NUMBER,
		EXCEPTION_QSCHEMA VARCHAR2(30),
		EXCEPTION_QUEUE VARCHAR2(30),
		STEP_NO NUMBER NOT NULL,
		RECIPIENT_KEY NUMBER,
		DEQUEUE_MSGID RAW(16),
		USER_DATA BLOB
	)
	LOGGING;

CREATE TABLE NULLID.APPFILES1 (
		UNID VARCHAR2(128) NOT NULL,
		FILENAME VARCHAR2(256),
		FILEDATA BLOB,
		FILETYPE VARCHAR2(256),
		ID_OWNER NUMBER,
		OWNER_TYPE NUMBER,
		DATE_OF_ADDITION DATE,
		DATE_OF_EXPIRATION DATE,
		ISACCEPTED NUMBER,
		WHOACCEPTED NUMBER,
		DATE_OF_ACCEPT DATE,
		SIGNATURE BLOB
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_EXCEPTIONS (
		EXCEPTION_ID NUMBER NOT NULL,
		USER_NAME VARCHAR2(30),
		REQUEST CLOB,
		JOB NUMBER,
		ERROR_DATE DATE,
		ERROR_NUMBER NUMBER,
		ERROR_MESSAGE VARCHAR2(4000),
		LINE_NUMBER NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.RATING_TYPE (
		ID_RATING_TYPE NUMBER NOT NULL,
		NAME_RATING_TYPE VARCHAR2(128)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_SNAPGROUP (
		GOWNER VARCHAR2(30) DEFAULT 'PUBLIC',
		GNAME VARCHAR2(30),
		DBLINK VARCHAR2(128),
		GROUP_COMMENT VARCHAR2(80),
		REP_TYPE NUMBER,
		FLAVOR_ID NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_TEMPLATE_TARGETS (
		TEMPLATE_TARGET_ID NUMBER NOT NULL,
		TARGET_DATABASE VARCHAR2(128) NOT NULL,
		TARGET_COMMENT VARCHAR2(2000),
		CONNECT_STRING VARCHAR2(4000),
		SPARE1 VARCHAR2(4000)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_EXTENSION (
		EXTENSION_ID RAW(16) NOT NULL,
		EXTENSION_CODE NUMBER,
		MASTERDEF VARCHAR2(128),
		EXPORT_REQUIRED VARCHAR2(1),
		REPCATLOG_ID NUMBER,
		EXTENSION_STATUS NUMBER,
		FLASHBACK_SCN NUMBER,
		PUSH_TO_MDEF VARCHAR2(1),
		PUSH_TO_NEW VARCHAR2(1),
		PERCENTAGE_FOR_CATCHUP_MDEF NUMBER,
		CYCLE_SECONDS_MDEF NUMBER,
		PERCENTAGE_FOR_CATCHUP_NEW NUMBER,
		CYCLE_SECONDS_NEW NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_FJG (
		FJGID# NUMBER NOT NULL,
		AJGID# NUMBER NOT NULL,
		FJGDESLEN NUMBER NOT NULL,
		FJGDES LONG RAW NOT NULL,
		HASHVALUE NUMBER NOT NULL,
		FREQUENCY NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_LOG (
		RUNID# NUMBER NOT NULL,
		FILTERID# NUMBER,
		RUN_BEGIN DATE,
		RUN_END DATE,
		RUN_TYPE NUMBER,
		UNAME VARCHAR2(30),
		STATUS NUMBER NOT NULL,
		MESSAGE VARCHAR2(2000),
		COMPLETED NUMBER,
		TOTAL NUMBER,
		ERROR_CODE VARCHAR2(20)
	)
	LOGGING;

CREATE TABLE NULLID.DEF$_DESTINATION (
		DBLINK VARCHAR2(128) NOT NULL,
		LAST_DELIVERED NUMBER DEFAULT 0 NOT NULL,
		LAST_ENQ_TID VARCHAR2(22),
		LAST_SEQ NUMBER,
		DISABLED CHAR(1),
		JOB NUMBER,
		LAST_TXN_COUNT NUMBER,
		LAST_ERROR_NUMBER NUMBER,
		LAST_ERROR_MESSAGE VARCHAR2(2000),
		APPLY_INIT VARCHAR2(4000),
		CATCHUP RAW(16) DEFAULT 00 NOT NULL,
		ALTERNATE CHAR(1) DEFAULT 'F',
		TOTAL_TXN_COUNT NUMBER DEFAULT 0,
		TOTAL_PROP_TIME_THROUGHPUT NUMBER DEFAULT 0,
		TOTAL_PROP_TIME_LATENCY NUMBER DEFAULT 0,
		TO_COMMUNICATION_SIZE NUMBER DEFAULT 0,
		FROM_COMMUNICATION_SIZE NUMBER DEFAULT 0,
		FLAG RAW(4) DEFAULT 00000000,
		SPARE1 NUMBER DEFAULT 0,
		SPARE2 NUMBER DEFAULT 0,
		SPARE3 NUMBER DEFAULT 0,
		SPARE4 NUMBER DEFAULT 0
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_COL$ (
		COL# NUMBER(22 , 0),
		SEGCOL# NUMBER(22 , 0),
		NAME VARCHAR2(30),
		TYPE# NUMBER(22 , 0),
		LENGTH NUMBER(22 , 0),
		PRECISION# NUMBER(22 , 0),
		SCALE NUMBER(22 , 0),
		NULL$ NUMBER(22 , 0),
		INTCOL# NUMBER(22 , 0),
		PROPERTY NUMBER(22 , 0),
		CHARSETID NUMBER(22 , 0),
		CHARSETFORM NUMBER(22 , 0),
		SPARE1 NUMBER(22 , 0),
		SPARE2 NUMBER(22 , 0),
		OBJ# NUMBER(22 , 0),
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.CRM_APPLICATIONS (
		ID_APPLICATION NUMBER(10 , 0) NOT NULL,
		FILIAL VARCHAR2(128) NOT NULL,
		APPLICATION_TYPE VARCHAR2(128) NOT NULL,
		PRODUCT_TYPE VARCHAR2(128) NOT NULL,
		AMOUNT VARCHAR2(128),
		DURATION VARCHAR2(128),
		CONTRACTOR VARCHAR2(128) NOT NULL,
		STATE VARCHAR2(10),
		CURRENCY VARCHAR2(10),
		DURATION_TYPE VARCHAR2(10)
	)
	LOGGING;

CREATE TABLE NULLID.DEF$_ORIGIN (
		ORIGIN_DB VARCHAR2(128),
		ORIGIN_DBLINK VARCHAR2(128),
		INUSR NUMBER,
		CSCN NUMBER,
		ENQ_TID VARCHAR2(22),
		RECO_SEQ_NO NUMBER,
		CATCHUP RAW(16) DEFAULT 00
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_PRIORITY (
		SNAME VARCHAR2(30) NOT NULL,
		PRIORITY_GROUP VARCHAR2(30) NOT NULL,
		PRIORITY NUMBER NOT NULL,
		RAW_VALUE RAW(2000),
		CHAR_VALUE CHAR(255),
		NUMBER_VALUE NUMBER,
		DATE_VALUE DATE,
		VARCHAR2_VALUE VARCHAR2(4000),
		NCHAR_VALUE NCHAR(500),
		NVARCHAR2_VALUE NVARCHAR2(1000),
		LARGE_CHAR_VALUE CHAR(2000)
	)
	LOGGING;

CREATE TABLE NULLID.ROLEEJB (
		ROLE1 VARCHAR2(250) NOT NULL,
		ROLENAME VARCHAR2(250),
		COMMENT1 VARCHAR2(250),
		SORTORDER NUMBER,
		TASKCOMMENT VARCHAR2(250)
	)
	LOGGING;

CREATE TABLE NULLID.CRM_CONTRACTOR (
		CONTRACTOR VARCHAR2(128) NOT NULL,
		TYPE VARCHAR2(64),
		TERRITORY VARCHAR2(64),
		STATUS VARCHAR2(64),
		NATIONALACCOUNT VARCHAR2(64),
		TARGETACCOUNT VARCHAR2(64),
		AKA VARCHAR2(128),
		MAINPHONE VARCHAR2(16),
		ALTERNATEPHONE VARCHAR2(16),
		EMAIL VARCHAR2(128),
		EMAILTYPE VARCHAR2(128),
		FAX VARCHAR2(16),
		INDUSTRY VARCHAR2(128),
		BUSSINESSDESCRIPTION VARCHAR2(128),
		EMPLOYEES VARCHAR2(128),
		REGION VARCHAR2(128)
	)
	LOGGING;

CREATE TABLE NULLID.STOP_FACTORS_GROUPS (
		ID_STOP_FACTORS_GROUPS NUMBER NOT NULL,
		NAME_GROUP VARCHAR2(1024)
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_FILTER (
		FILTERID# NUMBER NOT NULL,
		SUBFILTERNUM# NUMBER NOT NULL,
		SUBFILTERTYPE NUMBER NOT NULL,
		STR_VALUE VARCHAR2(1028),
		NUM_VALUE1 NUMBER,
		NUM_VALUE2 NUMBER,
		DATE_VALUE1 DATE,
		DATE_VALUE2 DATE
	)
	LOGGING;

CREATE TABLE NULLID.AQ$_QUEUES (
		OID RAW(16) NOT NULL,
		EVENTID NUMBER NOT NULL,
		NAME VARCHAR2(30) NOT NULL,
		TABLE_OBJNO NUMBER NOT NULL,
		USAGE NUMBER NOT NULL,
		ENABLE_FLAG NUMBER NOT NULL,
		MAX_RETRIES NUMBER,
		RETRY_DELAY NUMBER,
		PROPERTIES NUMBER,
		RET_TIME NUMBER,
		QUEUE_COMMENT VARCHAR2(2000),
		SUBSCRIBERS LONG RAW
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_AUDIT_ATTRIBUTE (
		ATTRIBUTE VARCHAR2(30) NOT NULL,
		DATA_TYPE_ID NUMBER NOT NULL,
		DATA_LENGTH NUMBER,
		SOURCE VARCHAR2(92) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.SQLPLUS_PRODUCT_PROFILE (
		PRODUCT VARCHAR2(30) NOT NULL,
		USERID VARCHAR2(30),
		ATTRIBUTE VARCHAR2(240),
		SCOPE VARCHAR2(240),
		NUMERIC_VALUE NUMBER(15 , 2),
		CHAR_VALUE VARCHAR2(240),
		DATE_VALUE DATE,
		LONG_VALUE LONG
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_DICTSTATE$ (
		LOGMNR_UID NUMBER(22 , 0),
		START_SCNBAS NUMBER,
		START_SCNWRP NUMBER,
		END_SCNBAS NUMBER,
		END_SCNWRP NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.TYPEOFDOCUMENT (
		IDTYPE NUMBER NOT NULL,
		TYPENAME VARCHAR2(32),
		TYPEDESCRIPTION VARCHAR2(256)
	)
	LOGGING;

CREATE TABLE NULLID.DEF$_ERROR (
		ENQ_TID VARCHAR2(22) NOT NULL,
		ORIGIN_TRAN_DB VARCHAR2(128),
		ORIGIN_ENQ_TID VARCHAR2(22),
		DESTINATION VARCHAR2(128),
		STEP_NO NUMBER,
		RECEIVER NUMBER,
		ENQ_TIME DATE,
		ERROR_NUMBER NUMBER,
		ERROR_MSG VARCHAR2(2000)
	)
	LOGGING;

CREATE TABLE NULLID.RUSBANK (
		ID NUMBER NOT NULL,
		LASTNAME VARCHAR2(40) NOT NULL,
		FIRSTNAME VARCHAR2(40) NOT NULL,
		MIDDLENAME VARCHAR2(40) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.COMPANYEJB (
		COMPANY NUMBER NOT NULL,
		NAME VARCHAR2(250),
		SHORTNAME VARCHAR2(250)
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_TABCOMPART$ (
		OBJ# NUMBER(22 , 0),
		BO# NUMBER(22 , 0),
		PART# NUMBER(22 , 0),
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.ORGANIZATIONS (
		ID_CONTRACTOR NUMBER NOT NULL,
		ACCOUNTID CHAR(12) NOT NULL,
		ACCOUNT VARCHAR2(128)
	)
	LOGGING;

CREATE TABLE NULLID.ROLES (
		ID_ROLES NUMBER NOT NULL,
		ROLE_NAME VARCHAR2(64) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.WM$LOCKROWS_INFO (
		WORKSPACE VARCHAR2(30),
		OWNER VARCHAR2(30),
		TABLE_NAME VARCHAR2(30),
		WHERE_CLAUSE CLOB
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_CLIQUE (
		CLIQUEID# NUMBER NOT NULL,
		RUNID# NUMBER NOT NULL,
		CLIQUEDESLEN NUMBER NOT NULL,
		CLIQUEDES LONG RAW NOT NULL,
		HASHVALUE NUMBER NOT NULL,
		FREQUENCY NUMBER NOT NULL,
		BYTECOST NUMBER NOT NULL,
		ROWSIZE NUMBER NOT NULL,
		NUMROWS NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.META_SIMPLEVOCABULARY (
		ID_VOCABULARY NUMBER NOT NULL,
		NAME_VOCABULARY VARCHAR2(128),
		FROM_TABLE VARCHAR2(128),
		ID_COLUMN VARCHAR2(128),
		NAME_COLUMN VARCHAR2(128)
	)
	LOGGING;

CREATE TABLE NULLID.SHAREHOLDERS (
		ID_SHAREHOLDER NUMBER NOT NULL,
		FIO VARCHAR2(128) NOT NULL,
		CATIGORY VARCHAR2(128),
		PART VARCHAR2(128),
		ID_CONTRACTOR NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_SITES_NEW (
		EXTENSION_ID RAW(16) NOT NULL,
		GOWNER VARCHAR2(30) NOT NULL,
		GNAME VARCHAR2(30) NOT NULL,
		DBLINK VARCHAR2(128) NOT NULL,
		FULL_INSTANTIATION VARCHAR2(1),
		MASTER_STATUS NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_ATTRCOL$ (
		INTCOL# NUMBER,
		NAME VARCHAR2(4000),
		OBJ# NUMBER,
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_PROCESSED_LOG$ (
		SESSION# NUMBER NOT NULL,
		THREAD# NUMBER NOT NULL,
		SEQUENCE# NUMBER,
		FIRST_CHANGE# NUMBER,
		NEXT_CHANGE# NUMBER,
		FIRST_TIME DATE,
		NEXT_TIME DATE,
		FILE_NAME VARCHAR2(513),
		STATUS NUMBER,
		INFO VARCHAR2(32),
		TIMESTAMP DATE
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_TABSUBPART$ (
		OBJ# NUMBER(22 , 0),
		DATAOBJ# NUMBER(22 , 0),
		POBJ# NUMBER(22 , 0),
		SUBPART# NUMBER(22 , 0),
		TS# NUMBER(22 , 0),
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_REPCOLUMN (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		TYPE NUMBER NOT NULL,
		CNAME VARCHAR2(30) NOT NULL,
		LCNAME VARCHAR2(4000),
		TOID RAW(16),
		VERSION# NUMBER,
		HASHCODE RAW(17),
		CTYPE_NAME VARCHAR2(30),
		CTYPE_OWNER VARCHAR2(30),
		ID NUMBER,
		POS NUMBER,
		TOP VARCHAR2(30),
		FLAG RAW(2) DEFAULT 0000,
		CTYPE NUMBER,
		LENGTH NUMBER,
		PRECISION# NUMBER,
		SCALE NUMBER,
		NULL$ NUMBER,
		CHARSETID NUMBER,
		CHARSETFORM NUMBER,
		PROPERTY RAW(4) DEFAULT 00000000,
		CLENGTH NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_OBJ$ (
		OBJV# NUMBER(22 , 0),
		OWNER# NUMBER(22 , 0),
		NAME VARCHAR2(30),
		NAMESPACE NUMBER(22 , 0),
		SUBNAME VARCHAR2(30),
		TYPE# NUMBER(22 , 0),
		OID$ RAW(16),
		REMOTEOWNER VARCHAR2(30),
		LINKNAME VARCHAR2(128),
		OBJ# NUMBER(22 , 0),
		LOGMNR_UID NUMBER(22 , 0),
		START_SCNBAS NUMBER,
		START_SCNWRP NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_USER_PARM_VALUES (
		USER_PARAMETER_ID NUMBER NOT NULL,
		TEMPLATE_PARAMETER_ID NUMBER NOT NULL,
		USER_ID NUMBER NOT NULL,
		PARM_VALUE CLOB
	)
	LOGGING;

CREATE TABLE NULLID.DEF$_PUSHED_TRANSACTIONS (
		SOURCE_SITE_ID NUMBER NOT NULL,
		LAST_TRAN_ID NUMBER DEFAULT 0,
		DISABLED VARCHAR2(1) DEFAULT 'F',
		SOURCE_SITE VARCHAR2(128)
	)
	LOGGING;

CREATE TABLE NULLID.MSUSEREJB (
		MSUCODE NUMBER NOT NULL,
		MSUSER VARCHAR2(250),
		MSPASSWORD VARCHAR2(250)
	)
	LOGGING;

CREATE TABLE NULLID.CONTRACTOR_TYPE (
		ID_CONTRACTOR_TYPE NUMBER NOT NULL,
		NAME_CONTRACTOR_TYPE VARCHAR2(128)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_GROUPED_COLUMN (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		GROUP_NAME VARCHAR2(30) NOT NULL,
		COLUMN_NAME VARCHAR2(30) NOT NULL,
		POS NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.APPLICATIONFILES (
		IDFILE NUMBER NOT NULL,
		UIDLOTUS VARCHAR2(256),
		FILENAME VARCHAR2(256),
		FILEDATA BLOB
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_USER_AUTHORIZATIONS (
		USER_AUTHORIZATION_ID NUMBER NOT NULL,
		USER_ID NUMBER NOT NULL,
		REFRESH_TEMPLATE_ID NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_FLAVORS (
		FLAVOR_ID NUMBER NOT NULL,
		GOWNER VARCHAR2(30) DEFAULT 'PUBLIC',
		GNAME VARCHAR2(30) NOT NULL,
		FNAME VARCHAR2(30),
		CREATION_DATE DATE DEFAULT 'SYSDATE',
		CREATED_BY NUMBER DEFAULT UID,
		PUBLISHED VARCHAR2(1) DEFAULT 'N'
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_RESOLUTION_STATISTICS (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		CONFLICT_TYPE_ID NUMBER NOT NULL,
		REFERENCE_NAME VARCHAR2(30) NOT NULL,
		METHOD_NAME VARCHAR2(80) NOT NULL,
		FUNCTION_NAME VARCHAR2(92) NOT NULL,
		PRIORITY_GROUP VARCHAR2(30),
		RESOLVED_DATE DATE NOT NULL,
		PRIMARY_KEY_VALUE VARCHAR2(2000) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.CONTRACTORS (
		ID_CONTRACTOR NUMBER NOT NULL,
		ID_CONTRACTOR_TYPE NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_GC (
		GCID# NUMBER NOT NULL,
		FJGID# NUMBER NOT NULL,
		GCDESLEN NUMBER NOT NULL,
		GCDES LONG RAW NOT NULL,
		HASHVALUE NUMBER NOT NULL,
		FREQUENCY NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_ROLLUP (
		RUNID# NUMBER NOT NULL,
		CLEVELID# NUMBER NOT NULL,
		PLEVELID# NUMBER NOT NULL,
		FLAGS NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_INDEX (
		RUNID# NUMBER NOT NULL,
		RANK# NUMBER NOT NULL,
		MVINDEX# NUMBER NOT NULL,
		INDEX_TYPE NUMBER,
		INDEX_NAME VARCHAR2(50),
		COLUMN_NAME VARCHAR2(32),
		SUMMARY_OWNER VARCHAR2(32)
	)
	LOGGING;

CREATE TABLE NULLID.WM$ENV_VARS (
		NAME VARCHAR2(100),
		VALUE VARCHAR2(4000)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_TEMPLATE_PARMS (
		TEMPLATE_PARAMETER_ID NUMBER NOT NULL,
		REFRESH_TEMPLATE_ID NUMBER NOT NULL,
		PARAMETER_NAME VARCHAR2(30) NOT NULL,
		DEFAULT_PARM_VALUE CLOB,
		PROMPT_STRING VARCHAR2(2000),
		USER_OVERRIDE VARCHAR2(1) DEFAULT 'Y'
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_DDL (
		LOG_ID NUMBER,
		SOURCE VARCHAR2(128),
		ROLE VARCHAR2(1),
		MASTER VARCHAR2(128),
		LINE NUMBER,
		TEXT VARCHAR2(2000),
		DDL_NUM NUMBER DEFAULT 1       -- order of ddls to execute
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_SITE_OBJECTS (
		TEMPLATE_SITE_ID NUMBER NOT NULL,
		SNAME VARCHAR2(30),
		ONAME VARCHAR2(30) NOT NULL,
		OBJECT_TYPE_ID NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.DEF$_TEMP$LOB (
		TEMP$BLOB BLOB,
		TEMP$CLOB CLOB,
		TEMP$NCLOB NCLOB
	)
	NOLOGGING;

CREATE TABLE NULLID.REPCAT$_PARAMETER_COLUMN (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		CONFLICT_TYPE_ID NUMBER NOT NULL,
		REFERENCE_NAME VARCHAR2(30) NOT NULL,
		SEQUENCE_NO NUMBER NOT NULL,
		PARAMETER_TABLE_NAME VARCHAR2(30) NOT NULL,
		PARAMETER_COLUMN_NAME VARCHAR2(4000),
		PARAMETER_SEQUENCE_NO NUMBER NOT NULL,
		COLUMN_POS NUMBER NOT NULL,
		ATTRIBUTE_SEQUENCE_NO NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_ATTRIBUTE$ (
		VERSION# NUMBER(22 , 0),
		NAME VARCHAR2(30),
		ATTRIBUTE# NUMBER(22 , 0),
		ATTR_TOID RAW(16),
		ATTR_VERSION# NUMBER(22 , 0),
		PROPERTIES NUMBER(22 , 0),
		TOID RAW(16),
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_TABPART$ (
		OBJ# NUMBER(22 , 0),
		BO# NUMBER(22 , 0),
		TS# NUMBER(22 , 0),
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_LOB$ (
		OBJ# NUMBER,
		INTCOL# NUMBER,
		COL# NUMBER,
		CHUNK NUMBER,
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.AQ$_QUEUE_TABLES (
		SCHEMA VARCHAR2(30) NOT NULL,
		NAME VARCHAR2(30) NOT NULL,
		UDATA_TYPE NUMBER NOT NULL,
		OBJNO NUMBER NOT NULL,
		FLAGS NUMBER NOT NULL,
		SORT_COLS NUMBER NOT NULL,
		TABLE_COMMENT VARCHAR2(2000)
	)
	LOGGING;

CREATE TABLE NULLID.DOCUMENTS_TYPE (
		ID_DOCUMENT_TYPE NUMBER NOT NULL,
		NAME_DOCUMENT_TYPE VARCHAR2(512),
		ID_GROUP NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_HEADER1$ (
		LOGMNR_UID NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.FILE_REQUEST (
		ID_REQUEST NUMBER NOT NULL,
		PRIORITY NUMBER NOT NULL,
		STATUS NUMBER NOT NULL,
		UNID VARCHAR2(64) NOT NULL,
		ID_DEP_REQUESTED NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_WORKLOAD (
		QUERYID# NUMBER NOT NULL,
		COLLECTIONID# NUMBER NOT NULL,
		COLLECTTIME DATE NOT NULL,
		APPLICATION VARCHAR2(30),
		CARDINALITY NUMBER,
		RESULTSIZE NUMBER,
		UNAME VARCHAR2(30) NOT NULL,
		QDATE DATE,
		PRIORITY NUMBER,
		EXEC_TIME NUMBER,
		SQL_TEXT LONG NOT NULL,
		SQL_TEXTLEN NUMBER NOT NULL,
		SQL_HASH NUMBER,
		SQL_ADDR RAW(16),
		FREQUENCY NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.DEF$_AQERROR (
		Q_NAME VARCHAR2(30),
		MSGID RAW(16),
		CORRID VARCHAR2(128),
		PRIORITY NUMBER,
		STATE NUMBER,
		DELAY DATE,
		EXPIRATION NUMBER,
		TIME_MANAGER_INFO DATE,
		LOCAL_ORDER_NO NUMBER,
		CHAIN_NO NUMBER,
		CSCN NUMBER,
		DSCN NUMBER,
		ENQ_TIME DATE,
		ENQ_UID NUMBER,
		ENQ_TID VARCHAR2(30) NOT NULL,
		DEQ_TIME DATE,
		DEQ_UID NUMBER,
		DEQ_TID VARCHAR2(30),
		RETRY_COUNT NUMBER,
		EXCEPTION_QSCHEMA VARCHAR2(30),
		EXCEPTION_QUEUE VARCHAR2(30),
		STEP_NO NUMBER NOT NULL,
		RECIPIENT_KEY NUMBER,
		DEQUEUE_MSGID RAW(16),
		USER_DATA BLOB
	)
	LOGGING;

CREATE TABLE NULLID.WORKPOSITIONEJB (
		WORKPOSITION NUMBER NOT NULL,
		NAME VARCHAR2(250),
		ISACTIVE NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.TARGET_TYPE (
		ID_TARGET_TYPE NUMBER NOT NULL,
		NAME_TARGET_TYPE VARCHAR2(256)
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_SESSION$ (
		SESSION# NUMBER,
		CLIENT# NUMBER,
		SESSION_NAME VARCHAR2(32),
		DB_ID NUMBER,
		RESETLOGS_CHANGE# NUMBER,
		SESSION_ATTR NUMBER,
		SESSION_ATTR_VERBOSE VARCHAR2(400),
		START_SCN NUMBER,
		END_SCN NUMBER,
		SPILL_SCN NUMBER,
		RESUME_SCN NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.DEF$_PROPAGATOR (
		USERID NUMBER NOT NULL,
		USERNAME VARCHAR2(30) NOT NULL,
		CREATED DATE DEFAULT 'SYSDATE' NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.PATTERN_DOCS (
		TYPE VARCHAR2(64),
		PATH_REF VARCHAR2(256),
		TYPE_GROUP NUMBER(10 , 0) DEFAULT 0,
		ID_PATTERN NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.STOP_FACTOR_FOR_CONTRACTOR (
		ID_STOP_FACTOR NUMBER NOT NULL,
		ID_CONTRACTOR NUMBER NOT NULL,
		VALUE NUMBER,
		DESCRIPTION VARCHAR2(2048),
		DATE_OF_DETECTION DATE,
		DATE_OF_EXPIRATION DATE
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_SPILL$ (
		SESSION# NUMBER NOT NULL,
		XIDUSN NUMBER NOT NULL,
		XIDSLT NUMBER NOT NULL,
		XIDSQN NUMBER NOT NULL,
		CHUNK NUMBER NOT NULL,
		STATE NUMBER,
		OFFSET NUMBER,
		LCR_OFFSET NUMBER,
		SPILL_DATA BLOB
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_TEMPLATE_REFGROUPS (
		REFRESH_GROUP_ID NUMBER NOT NULL,
		REFRESH_GROUP_NAME VARCHAR2(30) NOT NULL,
		REFRESH_TEMPLATE_ID NUMBER NOT NULL,
		ROLLBACK_SEG VARCHAR2(30),
		START_DATE VARCHAR2(200),
		INTERVAL VARCHAR2(200)
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_PLAN (
		STATEMENT_ID VARCHAR2(30),
		TIMESTAMP DATE,
		REMARKS VARCHAR2(80),
		OPERATION VARCHAR2(30),
		OPTIONS VARCHAR2(255),
		OBJECT_NODE VARCHAR2(128),
		OBJECT_OWNER VARCHAR2(30),
		OBJECT_NAME VARCHAR2(30),
		OBJECT_INSTANCE NUMBER,
		OBJECT_TYPE VARCHAR2(30),
		OPTIMIZER VARCHAR2(255),
		SEARCH_COLUMNS NUMBER,
		ID NUMBER,
		PARENT_ID NUMBER,
		POSITION NUMBER,
		COST NUMBER,
		CARDINALITY NUMBER,
		BYTES NUMBER,
		OTHER_TAG VARCHAR2(255),
		PARTITION_START VARCHAR2(255),
		PARTITION_STOP VARCHAR2(255),
		PARTITION_ID NUMBER,
		OTHER LONG,
		DISTRIBUTION VARCHAR2(30),
		CPU_COST NUMBER,
		IO_COST NUMBER,
		TEMP_SPACE NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_AJG (
		AJGID# NUMBER NOT NULL,
		RUNID# NUMBER NOT NULL,
		AJGDESLEN NUMBER NOT NULL,
		AJGDES LONG RAW NOT NULL,
		HASHVALUE NUMBER NOT NULL,
		FREQUENCY NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_JOURNAL (
		RUNID# NUMBER NOT NULL,
		SEQ# NUMBER NOT NULL,
		TIMESTAMP DATE NOT NULL,
		FLAGS NUMBER NOT NULL,
		NUM NUMBER,
		TEXT LONG,
		TEXTLEN NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.FB_ACCOUNT (
		ACCOUNTID CHAR(12) NOT NULL,
		CREATEUSER CHAR(12),
		CREATEDATE DATE,
		MODIFYUSER CHAR(12),
		MODIFYDATE DATE,
		ZAEM_CATEGORY VARCHAR2(64),
		OKVED VARCHAR2(128),
		SWIFT VARCHAR2(128),
		TELEX VARCHAR2(128),
		INN VARCHAR2(12),
		KPP VARCHAR2(9),
		DATE_STRAT_LEVEL DATE,
		DATE_ZAEM_CATEGORY DATE,
		DATE_CATEGORY DATE,
		BRANCH_ID NUMBER,
		DIV_ID NUMBER,
		CATEG_ID NUMBER,
		PROPERTY_FORM_ID NUMBER,
		CONTROLUSERID CHAR(12),
		CONTROLDATE DATE,
		UPRAVLENIE VARCHAR2(64),
		OKPO_CD VARCHAR2(16),
		HOLDINGID CHAR(12),
		IS_STRATEGIC CHAR(1),
		ZAEM_CATEGORY_CODE VARCHAR2(8),
		IS_STRATEGIC_FEDERAL CHAR(1),
		IS_STRATEGIC_OTRASL CHAR(1),
		IS_STRATEGIC_REGIONAL CHAR(1),
		RESIDENT VARCHAR2(34),
		CATEGORY VARCHAR2(80),
		BRAND VARCHAR2(80),
		ASSOCIATIONMODE CHAR(1),
		DIRECTOR CHAR(12),
		UDIRECTOR CHAR(12),
		CLASS VARCHAR2(64),
		CUST_ACCOUNTID VARCHAR2(32),
		OGRN VARCHAR2(15),
		OGRN_PLACE VARCHAR2(80),
		OGRN_DATE DATE,
		ISCHECKED CHAR(1),
		REGIONALMANAGERID2 CHAR(12),
		TP_CALC_DATE DATE,
		PODSEGMENT VARCHAR2(64),
		CUST_ACCOUNTID2 VARCHAR2(32),
		TODELETE CHAR(1),
		ISPERSONALACCESS_OU CHAR(1),
		DIVISIONALMANAGERID2 CHAR(12),
		AARCHIVE CHAR(1),
		ATRASH CHAR(1),
		IS_TREATMENT CHAR(1),
		IS_PLAN CHAR(1),
		UPRAVLENIE2 VARCHAR2(32),
		TELETYPE VARCHAR2(32),
		IS_OMR CHAR(1),
		OMR_NAME VARCHAR2(50),
		IS_OFO CHAR(1),
		OFO_NAME VARCHAR2(50),
		IS_ROZ CHAR(1),
		ROZ_NAME VARCHAR2(50),
		KIO VARCHAR2(10),
		IS_SHARE CHAR(1),
		IS_EXTERNAL CHAR(1),
		EXTERNALID CHAR(12),
		IS_CONTROL CHAR(1),
		CORP_BLOCK VARCHAR2(64),
		IS_FACT CHAR(1),
		IS_PLAN_CHANGEDATE DATE,
		IS_PLAN_CHANGEUSER CHAR(12),
		IS_OWNERMANUAL CHAR(1),
		BIK VARCHAR2(32),
		SUBDIVISIONID CHAR(12),
		GROUPID CHAR(12),
		AKA_EN VARCHAR2(128),
		CAPITAL_REGISTRED NUMBER,
		CAPITAL_PAID NUMBER,
		CAPITAL_REGISTRED_UNIT VARCHAR2(8),
		CAPITAL_PAID_UNIT VARCHAR2(8),
		MARKET VARCHAR2(1000),
		COMPANY_HISTORY VARCHAR2(1000),
		REPUTATION VARCHAR2(1000),
		INTERBANK VARCHAR2(1000),
		BUSINESS_CLIENT VARCHAR2(1000),
		BUSINESS_RETAIL VARCHAR2(1000),
		SECCODEID_PGZ CHAR(12),
		IS_OWNERMANUAL_PGZ CHAR(1),
		DIVMANID_PGZ CHAR(12),
		CORP_BLOCK_PGZ VARCHAR2(64),
		UPRAVLENIE_PGZ VARCHAR2(64),
		CATEGORY_PGZ VARCHAR2(80),
		ACCOUNTMANID_PGZ CHAR(12),
		IS_AUTO_PGZ CHAR(1),
		USERID_PGZ CHAR(12),
		DATE_PGZ DATE,
		IS_SET_PGZ CHAR(1),
		IS_FINISHED_PGZ CHAR(1),
		IS_SET_TERRITORY CHAR(1),
		YEAR_PROFIT NUMBER,
		CATEGORY_CHANGENOTES VARCHAR2(512),
		REGNUM VARCHAR2(4),
		PRIZNAK_ZAKR VARCHAR2(64),
		EKZ_ID CHAR(12),
		PRIMARY_ZAKR_DATE DATE,
		PRIMARY_ZAKR_READY CHAR(1),
		PROG_ZAKR_INITIATED CHAR(1),
		PROG_ZAKR_PERIOD VARCHAR2(6),
		PROG_ZAKR_DOC_NUM VARCHAR2(32),
		PROG_ZAKR_DOC_DATE DATE,
		ZAKR_CHANGE_CONTROL CHAR(1)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_TEMPLATE_STATUS (
		TEMPLATE_STATUS_ID NUMBER NOT NULL,
		STATUS_TYPE_NAME VARCHAR2(100) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.OPERATOREJB (
		OPERATOR NUMBER NOT NULL,
		MAN NUMBER,
		LOGINID VARCHAR2(250),
		PASSWORD VARCHAR2(250),
		ISENABLED NUMBER,
		MSUCODE NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_REPPROP (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		TYPE NUMBER NOT NULL,
		DBLINK VARCHAR2(128) NOT NULL,
		HOW NUMBER,
		PROPAGATE_COMMENT VARCHAR2(80),
		DELIVERY_ORDER NUMBER,
		RECIPIENT_KEY NUMBER,
		EXTENSION_ID RAW(16) DEFAULT 00
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_IND$ (
		BO# NUMBER(22 , 0),
		COLS NUMBER(22 , 0),
		TYPE# NUMBER(22 , 0),
		OBJ# NUMBER(22 , 0),
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.COMMISSION_TYPE (
		ID_COMMISSION_TYPE NUMBER NOT NULL,
		NAME_COMMISSION_TYPE VARCHAR2(256)
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_ELIGIBLE (
		SUMOBJN# NUMBER NOT NULL,
		RUNID# NUMBER NOT NULL,
		BYTECOST NUMBER NOT NULL,
		FLAGS NUMBER NOT NULL,
		FREQUENCY NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.LINK_OWNFORM_DOCTYPE (
		ID_OWNERSHIP_FORM_TYPE NUMBER NOT NULL,
		ID_DOCUMENT_TYPE NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.PATTERN_INTEREST_RATE (
		ID_PATTERN_INTEREST_RATE NUMBER NOT NULL,
		NAME_PATTERN_INTEREST_RATE VARCHAR2(256)
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_TS$ (
		TS# NUMBER(22 , 0),
		NAME VARCHAR2(30),
		OWNER# NUMBER(22 , 0),
		BLOCKSIZE NUMBER(22 , 0),
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_OBJECT_PARMS (
		TEMPLATE_PARAMETER_ID NUMBER NOT NULL,
		TEMPLATE_OBJECT_ID NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_CDEF$ (
		CON# NUMBER,
		OBJ# NUMBER,
		COLS NUMBER,
		TYPE# NUMBER,
		ROBJ# NUMBER,
		RCON# NUMBER,
		ENABLED NUMBER,
		DEFER NUMBER,
		LOGMNR_UID NUMBER(22 , 0),
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_TEMPLATE_TYPES (
		TEMPLATE_TYPE_ID NUMBER NOT NULL,
		TEMPLATE_DESCRIPTION VARCHAR2(200),
		FLAGS RAW(255),
		SPARE1 VARCHAR2(4000)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_CONFLICT (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		CONFLICT_TYPE_ID NUMBER NOT NULL,
		REFERENCE_NAME VARCHAR2(30) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_TEMPLATE_OBJECTS (
		TEMPLATE_OBJECT_ID NUMBER NOT NULL,
		REFRESH_TEMPLATE_ID NUMBER NOT NULL,
		OBJECT_NAME VARCHAR2(30) NOT NULL,
		OBJECT_TYPE NUMBER NOT NULL,
		OBJECT_VERSION# NUMBER,
		DDL_TEXT CLOB,
		MASTER_ROLLBACK_SEG VARCHAR2(30),
		DERIVED_FROM_SNAME VARCHAR2(30),
		DERIVED_FROM_ONAME VARCHAR2(30),
		FLAVOR_ID NUMBER,
		SCHEMA_NAME VARCHAR2(30),
		DDL_NUM NUMBER DEFAULT 1 NOT NULL,
		TEMPLATE_REFGROUP_ID NUMBER DEFAULT 0 NOT NULL,
		FLAGS RAW(255),
		SPARE1 VARCHAR2(4000)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_RESOLUTION_METHOD (
		CONFLICT_TYPE_ID NUMBER NOT NULL,
		METHOD_NAME VARCHAR2(80) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.LOGMNR_HEADER2$ (
		OBJV# NUMBER(22 , 0)
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_BASETABLE (
		COLLECTIONID# NUMBER NOT NULL,
		QUERYID# NUMBER NOT NULL,
		OWNER VARCHAR2(30),
		TABLE_NAME VARCHAR2(30),
		TABLE_TYPE NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.OPPORTUNITY_TYPE (
		ID_OPPORTUNITY_TYPE NUMBER NOT NULL,
		NAME_OPPORTUNITY_TYPE VARCHAR2(256)
	)
	LOGGING;

CREATE TABLE NULLID.PEOPLEEJB (
		MAN NUMBER NOT NULL,
		FIRSTNAME VARCHAR2(250),
		LASTNAME VARCHAR2(250),
		MIDDLENAME VARCHAR2(250),
		PASSPORTSER VARCHAR2(250),
		PASSPORTDATE DATE,
		PASSPORTWHOM VARCHAR2(250),
		ISACTIVE NUMBER,
		TABNUM NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_GENERATED (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		TYPE NUMBER NOT NULL,
		REASON NUMBER,
		BASE_SNAME VARCHAR2(30) NOT NULL,
		BASE_ONAME VARCHAR2(30) NOT NULL,
		BASE_TYPE NUMBER NOT NULL,
		PACKAGE_PREFIX VARCHAR2(30),
		PROCEDURE_PREFIX VARCHAR2(30),
		DISTRIBUTED VARCHAR2(1)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_REPSCHEMA (
		GOWNER VARCHAR2(30) DEFAULT 'PUBLIC' NOT NULL,
		SNAME VARCHAR2(30) NOT NULL,
		DBLINK VARCHAR2(128) NOT NULL,
		MASTERDEF VARCHAR2(1),
		SNAPMASTER VARCHAR2(1),
		MASTER_COMMENT VARCHAR2(80),
		MASTER VARCHAR2(1),
		PROP_UPDATES NUMBER DEFAULT 0,
		MY_DBLINK VARCHAR2(1),
		EXTENSION_ID RAW(16) DEFAULT 00
	)
	LOGGING;

CREATE TABLE NULLID.WORKEREJB (
		WORKER NUMBER NOT NULL,
		COMPANY NUMBER,
		MAN NUMBER,
		WORKPOSITION NUMBER,
		DIVISION NUMBER,
		LOTUSADDRESS VARCHAR2(250),
		EMAIL VARCHAR2(250),
		PHONE1 VARCHAR2(250),
		PHONE2 VARCHAR2(250),
		LOCALPHONE VARCHAR2(250),
		FAX VARCHAR2(250),
		MOBILEPHONE VARCHAR2(250),
		ISACTIVE NUMBER,
		ISOUR NUMBER,
		ORGANIZATION NUMBER,
		ISSERVICESTUFF NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_REFRESH_TEMPLATES (
		REFRESH_TEMPLATE_ID NUMBER NOT NULL,
		OWNER VARCHAR2(30) NOT NULL,
		REFRESH_GROUP_NAME VARCHAR2(30) NOT NULL,
		REFRESH_TEMPLATE_NAME VARCHAR2(30) NOT NULL,
		TEMPLATE_COMMENT VARCHAR2(2000),
		PUBLIC_TEMPLATE VARCHAR2(1),
		LAST_MODIFIED DATE,
		MODIFIED_BY NUMBER,
		CREATION_DATE DATE,
		CREATED_BY NUMBER,
		REFRESH_GROUP_ID NUMBER DEFAULT 0 NOT NULL,
		TEMPLATE_TYPE_ID NUMBER DEFAULT 1 NOT NULL,
		TEMPLATE_STATUS_ID NUMBER DEFAULT 0 NOT NULL,
		FLAGS RAW(255),
		SPARE1 VARCHAR2(4000)
	)
	LOGGING;

CREATE TABLE NULLID.DEF$_CALLDEST (
		ENQ_TID VARCHAR2(22) NOT NULL,
		STEP_NO NUMBER NOT NULL,
		DBLINK VARCHAR2(128) NOT NULL,
		SCHEMA_NAME VARCHAR2(30),
		PACKAGE_NAME VARCHAR2(30),
		CATCHUP RAW(16) DEFAULT 00
	)
	LOGGING;

CREATE TABLE NULLID.PATTERN_PAID_PERCENT_TYPE (
		ID_PAID_PERCENT_TYPE NUMBER NOT NULL,
		NAME_PAID_PERCENT_TYPE VARCHAR2(128)
	)
	LOGGING;

CREATE TABLE NULLID.REPCAT$_KEY_COLUMNS (
		SNAME VARCHAR2(30) NOT NULL,
		ONAME VARCHAR2(30) NOT NULL,
		TYPE NUMBER,
		COL VARCHAR2(30) NOT NULL
	)
	LOGGING;

CREATE TABLE NULLID.MVIEW$_ADV_PRETTY (
		QUERYID# NUMBER,
		SQL_TEXT LONG
	)
	LOGGING;

CREATE TABLE NULLID.AQ$_INTERNET_AGENTS (
		AGENT_NAME VARCHAR2(30) NOT NULL,
		PROTOCOL NUMBER NOT NULL,
		SPARE1 VARCHAR2(128)
	)
	LOGGING;

CREATE TABLE NULLID.SPO_SETTINGS (
		ID_DEPARTMENT NUMBER NOT NULL,
		DEPARTMENT_NAME VARCHAR2(256),
		FILEHOST_IP VARCHAR2(256) NOT NULL,
		FILEHOST_TYPE NUMBER DEFAULT 0 NOT NULL,
		MQ_HOSTNAME VARCHAR2(64),
		MQ_PORT VARCHAR2(16),
		MQ_QUEUEMANAGER VARCHAR2(64),
		MQ_SERVERCHANNEL VARCHAR2(64),
		MQ_QUEUENAME VARCHAR2(64)
	)
	LOGGING;

CREATE TABLE NULLID.AQ$_SCHEDULES (
		OID RAW(16) NOT NULL,
		DESTINATION VARCHAR2(128) NOT NULL,
		START_TIME DATE,
		DURATION VARCHAR2(8),
		NEXT_TIME VARCHAR2(128),
		LATENCY VARCHAR2(8),
		LAST_TIME DATE,
		JOBNO NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.DIVISIONEJB (
		DIVISION NUMBER NOT NULL,
		TYPE1 VARCHAR2(250),
		ENCLOSER NUMBER,
		NAME VARCHAR2(250),
		SHORTNAME VARCHAR2(250),
		BOSS NUMBER,
		COMPANY NUMBER,
		ISACTIVE NUMBER
	)
	LOGGING;

CREATE TABLE NULLID.PROFILEEJB (
		OPERATORID NUMBER NOT NULL,
		KEY1 VARCHAR2(250) NOT NULL,
		NAME VARCHAR2(250) NOT NULL,
		TYPE1 NUMBER,
		NUM_VALUE NUMBER(10 , 2),
		STR_VALUE VARCHAR2(250),
		DATE_VALUE TIMESTAMP(6),
		KEY_TYPE NUMBER,
		MODIFIED TIMESTAMP(6)
	)
	LOGGING;

CREATE TABLE SYSTEM.MVIEW$_ADV_EXCEPTIONS (
		BAD_ROWID ROWID,
		RUNID# NUMBER,
		OWNER VARCHAR2(30),
		TABLE_NAME VARCHAR2(30),
		DIMENSION_NAME VARCHAR2(30),
		RELATIONSHIP VARCHAR2(11)
	)
	LOGGING;

CREATE TABLE SYSTEM.MVIEW$_ADV_OUTPUT (
		WHERE_CLAUSE VARCHAR2(2000),
		CUMULATIVE_BENEFIT NUMBER,
		OUTPUT_TYPE NUMBER NOT NULL,
		FROM_CLAUSE VARCHAR2(2000),
		RANK# NUMBER NOT NULL,
		SUMMARY_NAME VARCHAR2(30),
		QUERYLEN NUMBER,
		RUNID# NUMBER NOT NULL,
		BENEFIT_TO_COST_RATIO NUMBER NOT NULL,
		GROUPING_LEVELS VARCHAR2(2000),
		GROUP_BY_COLUMNS VARCHAR2(2000),
		VALIDATED NUMBER,
		MEASURES_LIST VARCHAR2(2000),
		QUERY_TEXT LONG,
		STORAGE_IN_BYTES NUMBER,
		ACTION_TYPE VARCHAR2(6),
		FREQUENCY NUMBER,
		SUMMARY_OWNER VARCHAR2(30),
		FACT_TABLES VARCHAR2(1000),
		PCT_PERFORMANCE_GAIN NUMBER
	)
	LOGGING;

CREATE TABLE SYSTEM.MVIEW$_ADV_FILTER (
		FILTERID# NUMBER NOT NULL,
		NUM_VALUE2 NUMBER,
		NUM_VALUE1 NUMBER,
		SUBFILTERTYPE NUMBER NOT NULL,
		STR_VALUE VARCHAR2(1028),
		DATE_VALUE2 DATE,
		SUBFILTERNUM# NUMBER NOT NULL,
		DATE_VALUE1 DATE
	)
	LOGGING;

CREATE TABLE SYSTEM.DEF$_AQCALL (
		CHAIN_NO NUMBER,
		DSCN NUMBER,
		ENQ_UID NUMBER,
		ENQ_TIME DATE,
		TIME_MANAGER_INFO DATE,
		LOCAL_ORDER_NO NUMBER,
		ENQ_TID VARCHAR2(30) NOT NULL,
		Q_NAME VARCHAR2(30),
		DELAY DATE,
		DEQ_TIME DATE,
		EXPIRATION NUMBER,
		EXCEPTION_QUEUE VARCHAR2(30),
		DEQ_UID NUMBER,
		DEQ_TID VARCHAR2(30),
		RECIPIENT_KEY NUMBER,
		EXCEPTION_QSCHEMA VARCHAR2(30),
		STEP_NO NUMBER NOT NULL,
		RETRY_COUNT NUMBER,
		STATE NUMBER,
		MSGID RAW(16),
		CORRID VARCHAR2(128),
		USER_DATA BLOB,
		PRIORITY NUMBER,
		DEQUEUE_MSGID RAW(16),
		CSCN NUMBER
	)
	LOGGING;

CREATE TABLE SYSTEM.MVIEW$_ADV_FILTERINSTANCE (
		FILTERID# NUMBER,
		STR_VALUE VARCHAR2(1028),
		SUBFILTERNUM# NUMBER,
		SUBFILTERTYPE NUMBER,
		DATE_VALUE2 DATE,
		DATE_VALUE1 DATE,
		NUM_VALUE2 NUMBER,
		NUM_VALUE1 NUMBER,
		RUNID# NUMBER NOT NULL
	)
	LOGGING;

CREATE TABLE SYSTEM.SQLPLUS_PRODUCT_PROFILE (
		CHAR_VALUE VARCHAR2(240),
		PRODUCT VARCHAR2(30) NOT NULL,
		DATE_VALUE DATE,
		LONG_VALUE LONG,
		ATTRIBUTE VARCHAR2(240),
		USERID VARCHAR2(30),
		NUMERIC_VALUE NUMBER(15 , 2),
		SCOPE VARCHAR2(240)
	)
	LOGGING;

CREATE TABLE SYSTEM.MVIEW$_ADV_WORKLOAD (
		CARDINALITY NUMBER,
		QUERYID# NUMBER NOT NULL,
		SQL_TEXTLEN NUMBER NOT NULL,
		APPLICATION VARCHAR2(30),
		COLLECTTIME DATE NOT NULL,
		SQL_TEXT LONG NOT NULL,
		COLLECTIONID# NUMBER NOT NULL,
		FREQUENCY NUMBER,
		QDATE DATE,
		EXEC_TIME NUMBER,
		PRIORITY NUMBER,
		UNAME VARCHAR2(30) NOT NULL,
		RESULTSIZE NUMBER,
		SQL_HASH NUMBER,
		SQL_ADDR RAW(16)
	)
	LOGGING;

CREATE TABLE SYSTEM.DEF$_AQERROR (
		RETRY_COUNT NUMBER,
		STEP_NO NUMBER NOT NULL,
		STATE NUMBER,
		PRIORITY NUMBER,
		DEQ_TID VARCHAR2(30),
		EXCEPTION_QUEUE VARCHAR2(30),
		DEQ_TIME DATE,
		DEQ_UID NUMBER,
		DSCN NUMBER,
		DEQUEUE_MSGID RAW(16),
		ENQ_UID NUMBER,
		USER_DATA BLOB,
		TIME_MANAGER_INFO DATE,
		ENQ_TIME DATE,
		LOCAL_ORDER_NO NUMBER,
		EXPIRATION NUMBER,
		DELAY DATE,
		ENQ_TID VARCHAR2(30) NOT NULL,
		EXCEPTION_QSCHEMA VARCHAR2(30),
		CHAIN_NO NUMBER,
		MSGID RAW(16),
		CORRID VARCHAR2(128),
		RECIPIENT_KEY NUMBER,
		CSCN NUMBER,
		Q_NAME VARCHAR2(30)
	)
	LOGGING;

CREATE TABLE SYSTEM.MVIEW$_ADV_LOG (
		UNAME VARCHAR2(30),
		STATUS NUMBER NOT NULL,
		ERROR_CODE VARCHAR2(20),
		COMPLETED NUMBER,
		MESSAGE VARCHAR2(2000),
		RUNID# NUMBER NOT NULL,
		TOTAL NUMBER,
		FILTERID# NUMBER,
		RUN_BEGIN DATE,
		RUN_END DATE,
		RUN_TYPE NUMBER
	)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_RESOLUTION_PK ON NULLID.REPCAT$_RESOLUTION (SNAME ASC, ONAME ASC, CONFLICT_TYPE_ID ASC, REFERENCE_NAME ASC, SEQUENCE_NO ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_RESOLUTION_F3_IDX ON NULLID.REPCAT$_RESOLUTION (CONFLICT_TYPE_ID ASC, METHOD_NAME ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_RESOLUTION_IDX2 ON NULLID.REPCAT$_RESOLUTION (SNAME ASC, ONAME ASC, CONFLICT_TYPE_ID ASC, REFERENCE_NAME ASC)
	LOGGING;

CREATE INDEX NULLID.PK_MESSAGE ON NULLID.MESSAGE (IDMESSAGE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_DEPARTMENTS ON NULLID.DEPARTMENTS (ID_DEPARTMENT ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_REPGROUP_PRIVS_UK ON NULLID.REPCAT$_REPGROUP_PRIVS (USERNAME ASC, GNAME ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPGROUP_PRIVS_N1 ON NULLID.REPCAT$_REPGROUP_PRIVS (GLOBAL_FLAG ASC, USERNAME ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPGROUP_PRIVS_FK_IDX ON NULLID.REPCAT$_REPGROUP_PRIVS (GNAME ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1COLTYPE$ ON NULLID.LOGMNR_COLTYPE$ (LOGMNR_UID ASC, OBJ# ASC, INTCOL# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_FLAVOR_OBJECTS_PK ON NULLID.REPCAT$_FLAVOR_OBJECTS (SNAME ASC, ONAME ASC, TYPE ASC, GNAME ASC, FLAVOR_ID ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_FLAVOR_OBJECTS_FG ON NULLID.REPCAT$_FLAVOR_OBJECTS (FLAVOR_ID ASC, GNAME ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_FLAVOR_OBJECTS_FK1_IDX ON NULLID.REPCAT$_FLAVOR_OBJECTS (GNAME ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_FLAVOR_OBJECTS_FK2_IDX ON NULLID.REPCAT$_FLAVOR_OBJECTS (GNAME ASC, FLAVOR_ID ASC, GOWNER ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_RESOL_STATS_CTRL_PK ON NULLID.REPCAT$_RESOL_STATS_CONTROL (SNAME ASC, ONAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.UNQ_PAIRS ON NULLID.AQ$_INTERNET_AGENT_PRIVS (AGENT_NAME ASC, DB_USERNAME ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1ICOL$ ON NULLID.LOGMNR_ICOL$ (LOGMNR_UID ASC, OBJ# ASC, INTCOL# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.DEF$_LOB_PRIMARY ON NULLID.DEF$_LOB (ID ASC)
	LOGGING;

CREATE INDEX NULLID.DEF$_LOB_N1 ON NULLID.DEF$_LOB (ENQ_TID ASC)
	LOGGING;

CREATE INDEX NULLID.MVIEW$_ADV_SQLDEPEND_IDX_01 ON NULLID.MVIEW$_ADV_SQLDEPEND (COLLECTIONID# ASC, FROM_ADDRESS ASC, FROM_HASH ASC, INST_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.DEF$_DEFAULTDEST_PRIMARY ON NULLID.DEF$_DEFAULTDEST (DBLINK ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.NID ON NULLID.USERBANK (NID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_AUDIT_COLUMN_PK ON NULLID.REPCAT$_AUDIT_COLUMN (COLUMN_NAME ASC, ONAME ASC, SNAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_FB_ABS_ADDRESS ON NULLID.FB_ABS_ADDRESS (ACCOUNTID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_RUNTIME_PARMS_PK ON NULLID.REPCAT$_RUNTIME_PARMS (RUNTIME_PARM_ID ASC, PARAMETER_NAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_LEVEL_PK ON NULLID.MVIEW$_ADV_LEVEL (RUNID# ASC, LEVELID# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_MANAGERS ON NULLID.MANAGERS (ID_MANAGER ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_COLUMN_GROUP_PK ON NULLID.REPCAT$_COLUMN_GROUP (SNAME ASC, ONAME ASC, GROUP_NAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_PARAMETERS_PK ON NULLID.MVIEW$_ADV_PARAMETERS (PARAMETER_NAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_REPOBJECT_PRIMARY ON NULLID.REPCAT$_REPOBJECT (SNAME ASC, ONAME ASC, TYPE ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPOBJECT_GNAME ON NULLID.REPCAT$_REPOBJECT (GNAME ASC, ONAME ASC, TYPE ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPOBJECT_PRNT_IDX ON NULLID.REPCAT$_REPOBJECT (GNAME ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1TAB$ ON NULLID.LOGMNR_TAB$ (LOGMNR_UID ASC, OBJ# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_PRIORITY_GROUP_PK ON NULLID.REPCAT$_PRIORITY_GROUP (PRIORITY_GROUP ASC, SNAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_PRIORITY_GROUP_U1 ON NULLID.REPCAT$_PRIORITY_GROUP (SNAME ASC, PRIORITY_GROUP ASC, DATA_TYPE_ID ASC, FIXED_DATA_LENGTH ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1USER$ ON NULLID.LOGMNR_USER$ (LOGMNR_UID ASC, USER# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_ACCOUNT ON NULLID.ACCOUNT (ACCOUNTID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_APPFILES ON NULLID.APPFILES (UNID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.HELP_TOPIC_SEQ ON NULLID.HELP (TOPIC ASC, SEQ ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_REPCAT_PRIMARY ON NULLID.REPCAT$_REPCAT (SNAME ASC, GOWNER ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_OBJECT_TYPE_PK ON NULLID.REPCAT$_OBJECT_TYPES (OBJECT_TYPE_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_SEQUENCES ON NULLID.SEQUENCES (ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_STOP_FACTORS ON NULLID.STOP_FACTORS (ID_STOP_FACTOR ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_OWNERSHIP_FORM_TYPE ON NULLID.OWNERSHIP_FORM_TYPE (ID_OWNERSHIP_FORM_TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_INSTANTIATION_DDL_PK ON NULLID.REPCAT$_INSTANTIATION_DDL (REFRESH_TEMPLATE_ID ASC, PHASE ASC, DDL_NUM ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_LIMIT_TYPE ON NULLID.LIMIT_TYPE (ID_LIMIT_TYPE ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1CCOL$ ON NULLID.LOGMNR_CCOL$ (LOGMNR_UID ASC, CON# ASC, INTCOL# ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1TYPE$ ON NULLID.LOGMNR_TYPE$ (LOGMNR_UID ASC, TOID ASC, VERSION# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.WM$UDTRIG_INFO_PK ON NULLID.WM$UDTRIG_INFO (TRIG_OWNER_NAME ASC, TRIG_NAME ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPCATLOG_GNAME ON NULLID.REPCAT$_REPCATLOG (GNAME ASC, SNAME ASC, ONAME ASC, TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_REPCATLOG_PRIMARY ON NULLID.REPCAT$_REPCATLOG (ID ASC, SOURCE ASC, ROLE ASC, MASTER ASC)
	LOGGING;

CREATE INDEX NULLID.MVIEW$_ADV_TEMP_IDX_01 ON NULLID.MVIEW$_ADV_TEMP (ID# ASC, SEQ# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_OUTPUT_PK ON NULLID.MVIEW$_ADV_OUTPUT (RUNID# ASC, RANK# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_TEMPLATE_SITES_PK ON NULLID.REPCAT$_TEMPLATE_SITES (TEMPLATE_SITE_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_TEMPLATE_SITES_U1 ON NULLID.REPCAT$_TEMPLATE_SITES (REFRESH_TEMPLATE_NAME ASC, USER_NAME ASC, SITE_NAME ASC, REPAPI_SITE_ID ASC)
	LOGGING;

CREATE INDEX NULLID.DEF$_TRANORDER ON NULLID.DEF$_AQCALL (CSCN ASC, ENQ_TID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_EXCEPTIONS_PK ON NULLID.REPCAT$_EXCEPTIONS (EXCEPTION_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_RATING ON NULLID.RATING_TYPE (ID_RATING_TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.I_REPCAT$_SNAPGROUP1 ON NULLID.REPCAT$_SNAPGROUP (GNAME ASC, DBLINK ASC, GOWNER ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.TEMPLATE$_TARGETS_PK ON NULLID.REPCAT$_TEMPLATE_TARGETS (TEMPLATE_TARGET_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_TEMPLATE_TARGETS_U1 ON NULLID.REPCAT$_TEMPLATE_TARGETS (TARGET_DATABASE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_FJG_PK ON NULLID.MVIEW$_ADV_FJG (FJGID# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_LOG_PK ON NULLID.MVIEW$_ADV_LOG (RUNID# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.DEF$_DESTINATION_PRIMARY ON NULLID.DEF$_DESTINATION (DBLINK ASC, CATCHUP ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1COL$ ON NULLID.LOGMNR_COL$ (LOGMNR_UID ASC, OBJ# ASC, INTCOL# ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I2COL$ ON NULLID.LOGMNR_COL$ (LOGMNR_UID ASC, OBJ# ASC, NAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.ID ON NULLID.CRM_APPLICATIONS (ID_APPLICATION ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_PRIORITY_PK ON NULLID.REPCAT$_PRIORITY (SNAME ASC, PRIORITY_GROUP ASC, PRIORITY ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_PRIORITY_F1_IDX ON NULLID.REPCAT$_PRIORITY (PRIORITY_GROUP ASC, SNAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_ROLEEJB ON NULLID.ROLEEJB (ROLE1 ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.CONTRACTOR ON NULLID.CRM_CONTRACTOR (CONTRACTOR ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_STOP_FACTORS_GROUPS ON NULLID.STOP_FACTORS_GROUPS (ID_STOP_FACTORS_GROUPS ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_FILTER_PK ON NULLID.MVIEW$_ADV_FILTER (FILTERID# ASC, SUBFILTERNUM# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.AQ$_QUEUES_PRIMARY ON NULLID.AQ$_QUEUES (OID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.AQ$_QUEUES_CHECK ON NULLID.AQ$_QUEUES (NAME ASC, TABLE_OBJNO ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_AUDIT_ATTRIBUTE_PK ON NULLID.REPCAT$_AUDIT_ATTRIBUTE (ATTRIBUTE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.DEF$_ERROR_PRIMARY ON NULLID.DEF$_ERROR (ENQ_TID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_COMPANYEJB ON NULLID.COMPANYEJB (COMPANY ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1TABCOMPART$ ON NULLID.LOGMNR_TABCOMPART$ (LOGMNR_UID ASC, OBJ# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_ORGANIZATIONS ON NULLID.ORGANIZATIONS (ID_CONTRACTOR ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_CONSTR_ROLES ON NULLID.ROLES (ID_ROLES ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_CLIQUE_PK ON NULLID.MVIEW$_ADV_CLIQUE (CLIQUEID# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_META_SIMPLEVOCABULARY ON NULLID.META_SIMPLEVOCABULARY (ID_VOCABULARY ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_SHAREHOLDERS ON NULLID.SHAREHOLDERS (ID_SHAREHOLDER ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_SITES_NEW_PK ON NULLID.REPCAT$_SITES_NEW (EXTENSION_ID ASC, GOWNER ASC, GNAME ASC, DBLINK ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_SITES_NEW_FK2_IDX ON NULLID.REPCAT$_SITES_NEW (GNAME ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_SITES_NEW_FK1_IDX ON NULLID.REPCAT$_SITES_NEW (EXTENSION_ID ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1ATTRCOL$ ON NULLID.LOGMNR_ATTRCOL$ (LOGMNR_UID ASC, OBJ# ASC, INTCOL# ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1TABSUBPART$ ON NULLID.LOGMNR_TABSUBPART$ (LOGMNR_UID ASC, OBJ# ASC, POBJ# ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPCOLUMN_FK_IDX ON NULLID.REPCAT$_REPCOLUMN (SNAME ASC, ONAME ASC, TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_REPCOLUMN_PK ON NULLID.REPCAT$_REPCOLUMN (SNAME ASC, ONAME ASC, TYPE ASC, CNAME ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1OBJ$ ON NULLID.LOGMNR_OBJ$ (LOGMNR_UID ASC, OBJ# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_USER_PARM_VALUES_PK ON NULLID.REPCAT$_USER_PARM_VALUES (USER_PARAMETER_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_USER_PARM_VALUES_U1 ON NULLID.REPCAT$_USER_PARM_VALUES (TEMPLATE_PARAMETER_ID ASC, USER_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.DEF$_PUSHED_TRAN_PRIMARY ON NULLID.DEF$_PUSHED_TRANSACTIONS (SOURCE_SITE_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_MSUSEREJB ON NULLID.MSUSEREJB (MSUCODE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_CONTRACTOR_TYPE ON NULLID.CONTRACTOR_TYPE (ID_CONTRACTOR_TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_GROUPED_COLUMN_PK ON NULLID.REPCAT$_GROUPED_COLUMN (SNAME ASC, ONAME ASC, GROUP_NAME ASC, COLUMN_NAME ASC, POS ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_GROUPED_COLUMN_F1_IDX ON NULLID.REPCAT$_GROUPED_COLUMN (SNAME ASC, ONAME ASC, GROUP_NAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_USER_AUTHORIZATIONS_PK ON NULLID.REPCAT$_USER_AUTHORIZATIONS (USER_AUTHORIZATION_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_USER_AUTHORIZATIONS_U1 ON NULLID.REPCAT$_USER_AUTHORIZATIONS (USER_ID ASC, REFRESH_TEMPLATE_ID ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_USER_AUTHORIZATIONS_N1 ON NULLID.REPCAT$_USER_AUTHORIZATIONS (REFRESH_TEMPLATE_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_FLAVORS_UNQ1 ON NULLID.REPCAT$_FLAVORS (GNAME ASC, FLAVOR_ID ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_FLAVORS_FNAME ON NULLID.REPCAT$_FLAVORS (FNAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_FLAVORS_GNAME ON NULLID.REPCAT$_FLAVORS (GNAME ASC, FNAME ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_FLAVORS_FK1_IDX ON NULLID.REPCAT$_FLAVORS (GNAME ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_RESOLUTION_STATS_N1 ON NULLID.REPCAT$_RESOLUTION_STATISTICS (SNAME ASC, ONAME ASC, RESOLVED_DATE ASC, CONFLICT_TYPE_ID ASC, REFERENCE_NAME ASC, METHOD_NAME ASC, FUNCTION_NAME ASC, PRIORITY_GROUP ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_CONTRACTORS ON NULLID.CONTRACTORS (ID_CONTRACTOR ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_GC_PK ON NULLID.MVIEW$_ADV_GC (GCID# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_ROLLUP_PK ON NULLID.MVIEW$_ADV_ROLLUP (RUNID# ASC, CLEVELID# ASC, PLEVELID# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_TEMPLATE_PARMS_PK ON NULLID.REPCAT$_TEMPLATE_PARMS (TEMPLATE_PARAMETER_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_TEMPLATE_PARMS_U1 ON NULLID.REPCAT$_TEMPLATE_PARMS (REFRESH_TEMPLATE_ID ASC, PARAMETER_NAME ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_DDL_INDEX ON NULLID.REPCAT$_DDL (LOG_ID ASC, SOURCE ASC, ROLE ASC, MASTER ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_DDL ON NULLID.REPCAT$_DDL (LOG_ID ASC, SOURCE ASC, ROLE ASC, MASTER ASC, LINE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_SITE_OBJECTS_U1 ON NULLID.REPCAT$_SITE_OBJECTS (TEMPLATE_SITE_ID ASC, ONAME ASC, OBJECT_TYPE_ID ASC, SNAME ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_SITE_OBJECTS_N1 ON NULLID.REPCAT$_SITE_OBJECTS (TEMPLATE_SITE_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_PARAMETER_COLUMN_PK ON NULLID.REPCAT$_PARAMETER_COLUMN (SNAME ASC, ONAME ASC, CONFLICT_TYPE_ID ASC, REFERENCE_NAME ASC, SEQUENCE_NO ASC, PARAMETER_TABLE_NAME ASC, PARAMETER_SEQUENCE_NO ASC, COLUMN_POS ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_PARAMETER_COLUMN_F1_I ON NULLID.REPCAT$_PARAMETER_COLUMN (SNAME ASC, ONAME ASC, CONFLICT_TYPE_ID ASC, REFERENCE_NAME ASC, SEQUENCE_NO ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1TABPART$ ON NULLID.LOGMNR_TABPART$ (LOGMNR_UID ASC, OBJ# ASC, BO# ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1LOB$ ON NULLID.LOGMNR_LOB$ (LOGMNR_UID ASC, OBJ# ASC, INTCOL# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.AQ$_QUEUE_TABLES_PRIMARY ON NULLID.AQ$_QUEUE_TABLES (OBJNO ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_DOCUMENT_TYPE ON NULLID.DOCUMENTS_TYPE (ID_DOCUMENT_TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_FILE_REQUEST ON NULLID.FILE_REQUEST (ID_REQUEST ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_WORKLOAD_PK ON NULLID.MVIEW$_ADV_WORKLOAD (QUERYID# ASC)
	LOGGING;

CREATE INDEX NULLID.MVIEW$_ADV_WORKLOAD_IDX_01 ON NULLID.MVIEW$_ADV_WORKLOAD (COLLECTIONID# ASC, QUERYID# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_WORKPOSITIONEJB ON NULLID.WORKPOSITIONEJB (WORKPOSITION ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_TARGET_TYPE ON NULLID.TARGET_TYPE (ID_TARGET_TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.DEF$_PROPAGATOR_PRIMARY ON NULLID.DEF$_PROPAGATOR (USERID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_PATTERN ON NULLID.PATTERN_DOCS (ID_PATTERN ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_STOP_FACTOR_FOR_CONTRACTOR ON NULLID.STOP_FACTOR_FOR_CONTRACTOR (ID_STOP_FACTOR ASC, ID_CONTRACTOR ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_TEMPLATE_REFGROUPS_PK ON NULLID.REPCAT$_TEMPLATE_REFGROUPS (REFRESH_GROUP_ID ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_TEMPLATE_REFGROUPS_N1 ON NULLID.REPCAT$_TEMPLATE_REFGROUPS (REFRESH_GROUP_NAME ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_TEMPLATE_REFGROUPS_N2 ON NULLID.REPCAT$_TEMPLATE_REFGROUPS (REFRESH_TEMPLATE_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_AJG_PK ON NULLID.MVIEW$_ADV_AJG (AJGID# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_JOURNAL_PK ON NULLID.MVIEW$_ADV_JOURNAL (RUNID# ASC, SEQ# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_TEMPLATE_STATUS_PK ON NULLID.REPCAT$_TEMPLATE_STATUS (TEMPLATE_STATUS_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_OPERATOREJB ON NULLID.OPERATOREJB (OPERATOR ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_REPPROP_PRIMARY ON NULLID.REPCAT$_REPPROP (SNAME ASC, ONAME ASC, TYPE ASC, DBLINK ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPPROP_DBLINK_HOW ON NULLID.REPCAT$_REPPROP (DBLINK ASC, HOW ASC, EXTENSION_ID ASC, RECIPIENT_KEY ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPPROP_KEY_INDEX ON NULLID.REPCAT$_REPPROP (RECIPIENT_KEY ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPPROP_PRNT_IDX ON NULLID.REPCAT$_REPPROP (SNAME ASC, ONAME ASC, TYPE ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPPROP_PRNT2_IDX ON NULLID.REPCAT$_REPPROP (SNAME ASC, DBLINK ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1IND$ ON NULLID.LOGMNR_IND$ (LOGMNR_UID ASC, OBJ# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_COMMISSION_TYPE ON NULLID.COMMISSION_TYPE (ID_COMMISSION_TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.MVIEW$_ADV_ELIGIBLE_PK ON NULLID.MVIEW$_ADV_ELIGIBLE (SUMOBJN# ASC, RUNID# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_LINK_OWNFORM_DOCTYPE ON NULLID.LINK_OWNFORM_DOCTYPE (ID_DOCUMENT_TYPE ASC, ID_OWNERSHIP_FORM_TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_PATTERN_INTEREST_RATE ON NULLID.PATTERN_INTEREST_RATE (ID_PATTERN_INTEREST_RATE ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1TS$ ON NULLID.LOGMNR_TS$ (LOGMNR_UID ASC, TS# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_OBJECT_PARMS_PK ON NULLID.REPCAT$_OBJECT_PARMS (TEMPLATE_PARAMETER_ID ASC, TEMPLATE_OBJECT_ID ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_OBJECT_PARMS_N2 ON NULLID.REPCAT$_OBJECT_PARMS (TEMPLATE_OBJECT_ID ASC)
	LOGGING;

CREATE INDEX NULLID.LOGMNR_I1CDEF$ ON NULLID.LOGMNR_CDEF$ (LOGMNR_UID ASC, CON# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_TEMPLATE_TYPES_PK ON NULLID.REPCAT$_TEMPLATE_TYPES (TEMPLATE_TYPE_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_CONFLICT_PK ON NULLID.REPCAT$_CONFLICT (SNAME ASC, ONAME ASC, CONFLICT_TYPE_ID ASC, REFERENCE_NAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_TEMPLATE_OBJECTS_PK ON NULLID.REPCAT$_TEMPLATE_OBJECTS (TEMPLATE_OBJECT_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_TEMPLATE_OBJECTS_U1 ON NULLID.REPCAT$_TEMPLATE_OBJECTS (OBJECT_NAME ASC, OBJECT_TYPE ASC, REFRESH_TEMPLATE_ID ASC, SCHEMA_NAME ASC, DDL_NUM ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_TEMPLATE_OBJECTS_N1 ON NULLID.REPCAT$_TEMPLATE_OBJECTS (REFRESH_TEMPLATE_ID ASC, OBJECT_TYPE ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_TEMPLATE_OBJECTS_N2 ON NULLID.REPCAT$_TEMPLATE_OBJECTS (REFRESH_TEMPLATE_ID ASC, OBJECT_NAME ASC, SCHEMA_NAME ASC, OBJECT_TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_RESOL_METHOD_PK ON NULLID.REPCAT$_RESOLUTION_METHOD (CONFLICT_TYPE_ID ASC, METHOD_NAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_OPPORTUNITY_TYPE ON NULLID.OPPORTUNITY_TYPE (ID_OPPORTUNITY_TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_PEOPLEEJB ON NULLID.PEOPLEEJB (MAN ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_REPGEN_PRIMARY ON NULLID.REPCAT$_GENERATED (SNAME ASC, ONAME ASC, TYPE ASC, BASE_SNAME ASC, BASE_ONAME ASC, BASE_TYPE ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_GENERATED_N1 ON NULLID.REPCAT$_GENERATED (BASE_SNAME ASC, BASE_ONAME ASC, BASE_TYPE ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPGEN_PRNT_IDX ON NULLID.REPCAT$_GENERATED (SNAME ASC, ONAME ASC, TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_REPSCHEMA_PRIMARY ON NULLID.REPCAT$_REPSCHEMA (SNAME ASC, DBLINK ASC, GOWNER ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPSCHEMA_DEST_IDX ON NULLID.REPCAT$_REPSCHEMA (DBLINK ASC, EXTENSION_ID ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_REPSCHEMA_PRNT_IDX ON NULLID.REPCAT$_REPSCHEMA (SNAME ASC, GOWNER ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_WORKEREJB ON NULLID.WORKEREJB (WORKER ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_REFRESH_TEMPLATES_PK ON NULLID.REPCAT$_REFRESH_TEMPLATES (REFRESH_TEMPLATE_ID ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_REFRESH_TEMPLATES_U1 ON NULLID.REPCAT$_REFRESH_TEMPLATES (REFRESH_TEMPLATE_NAME ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.DEF$_CALLDEST_PRIMARY ON NULLID.DEF$_CALLDEST (ENQ_TID ASC, DBLINK ASC, STEP_NO ASC)
	LOGGING;

CREATE INDEX NULLID.DEF$_CALLDEST_N2 ON NULLID.DEF$_CALLDEST (DBLINK ASC, CATCHUP ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_PATTERN_PAID_PERCENT_TYPE ON NULLID.PATTERN_PAID_PERCENT_TYPE (ID_PAID_PERCENT_TYPE ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.REPCAT$_KEY_COLUMNS_PRIMARY ON NULLID.REPCAT$_KEY_COLUMNS (SNAME ASC, ONAME ASC, COL ASC)
	LOGGING;

CREATE INDEX NULLID.REPCAT$_KEY_COLUMNS_PRNT_IDX ON NULLID.REPCAT$_KEY_COLUMNS (SNAME ASC, ONAME ASC, TYPE ASC)
	LOGGING;

CREATE INDEX NULLID.MVIEW$_ADV_PRETTY_IDX_01 ON NULLID.MVIEW$_ADV_PRETTY (QUERYID# ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_SPO_SETTINGS ON NULLID.SPO_SETTINGS (ID_DEPARTMENT ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.AQ$_SCHEDULES_PRIMARY ON NULLID.AQ$_SCHEDULES (OID ASC, DESTINATION ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.AQ$_SCHEDULES_CHECK ON NULLID.AQ$_SCHEDULES (JOBNO ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_DIVISIONEJB ON NULLID.DIVISIONEJB (DIVISION ASC)
	LOGGING;

CREATE UNIQUE INDEX NULLID.PK_PROFILEEJB ON NULLID.PROFILEEJB (OPERATORID ASC, KEY1 ASC, NAME ASC)
	LOGGING;

ALTER TABLE NULLID.REPCAT$_RESOLUTION ADD CONSTRAINT REPCAT$_RESOLUTION_PK PRIMARY KEY (SNAME, ONAME, CONFLICT_TYPE_ID, REFERENCE_NAME, SEQUENCE_NO);

ALTER TABLE NULLID.MESSAGE ADD CONSTRAINT XPK_MESSAGE PRIMARY KEY (IDMESSAGE);

ALTER TABLE NULLID.DEPARTMENTS ADD CONSTRAINT PK_DEPARTMENTS PRIMARY KEY (ID_DEPARTMENT);

ALTER TABLE NULLID.REPCAT$_REPGROUP_PRIVS ADD CONSTRAINT REPCAT$_REPGROUP_PRIVS_UK UNIQUE (USERNAME, GNAME, GOWNER);

ALTER TABLE NULLID.LOGMNR_COLTYPE$ ADD CONSTRAINT SYS_C001055 PRIMARY KEY (LOGMNR_UID, OBJ#, INTCOL#);

ALTER TABLE NULLID.REPCAT$_FLAVOR_OBJECTS ADD CONSTRAINT REPCAT$_FLAVOR_OBJECTS_PK PRIMARY KEY (SNAME, ONAME, TYPE, GNAME, FLAVOR_ID, GOWNER);

ALTER TABLE NULLID.REPCAT$_RESOL_STATS_CONTROL ADD CONSTRAINT REPCAT$_RESOL_STATS_CTRL_PK PRIMARY KEY (SNAME, ONAME);

ALTER TABLE NULLID.AQ$_INTERNET_AGENT_PRIVS ADD CONSTRAINT UNQ_PAIRS UNIQUE (AGENT_NAME, DB_USERNAME);

ALTER TABLE NULLID.LOGMNR_UID$ ADD CONSTRAINT SYS_C001042 PRIMARY KEY (SESSION#);

ALTER TABLE NULLID.LOGMNR_ICOL$ ADD CONSTRAINT SYS_C001060 PRIMARY KEY (LOGMNR_UID, OBJ#, INTCOL#);

ALTER TABLE NULLID.DEF$_LOB ADD CONSTRAINT DEF$_LOB_PRIMARY PRIMARY KEY (ID);

ALTER TABLE NULLID.LOGMNR_LOG$ ADD CONSTRAINT SYS_C001061 PRIMARY KEY (SESSION#, THREAD#, SEQUENCE#);

ALTER TABLE NULLID.DEF$_DEFAULTDEST ADD CONSTRAINT DEF$_DEFAULTDEST_PRIMARY PRIMARY KEY (DBLINK);

ALTER TABLE NULLID.USERBANK ADD CONSTRAINT NID PRIMARY KEY (NID);

ALTER TABLE NULLID.REPCAT$_AUDIT_COLUMN ADD CONSTRAINT REPCAT$_AUDIT_COLUMN_PK PRIMARY KEY (COLUMN_NAME, ONAME, SNAME);

ALTER TABLE NULLID.FB_ABS_ADDRESS ADD CONSTRAINT PK_FB_ABS_ADDRESS PRIMARY KEY (ACCOUNTID);

ALTER TABLE NULLID.MVIEW$_ADV_LEVEL ADD CONSTRAINT MVIEW$_ADV_LEVEL_PK PRIMARY KEY (RUNID#, LEVELID#);

ALTER TABLE NULLID.MANAGERS ADD CONSTRAINT PK_MANAGERS PRIMARY KEY (ID_MANAGER);

ALTER TABLE NULLID.REPCAT$_COLUMN_GROUP ADD CONSTRAINT REPCAT$_COLUMN_GROUP_PK PRIMARY KEY (SNAME, ONAME, GROUP_NAME);

ALTER TABLE NULLID.MVIEW$_ADV_PARAMETERS ADD CONSTRAINT MVIEW$_ADV_PARAMETERS_PK PRIMARY KEY (PARAMETER_NAME);

ALTER TABLE NULLID.REPCAT$_REPOBJECT ADD CONSTRAINT REPCAT$_REPOBJECT_PRIMARY PRIMARY KEY (SNAME, ONAME, TYPE);

ALTER TABLE NULLID.LOGMNR_TAB$ ADD CONSTRAINT SYS_C001045 PRIMARY KEY (LOGMNR_UID, OBJ#);

ALTER TABLE NULLID.REPCAT$_PRIORITY_GROUP ADD CONSTRAINT REPCAT$_PRIORITY_GROUP_PK PRIMARY KEY (PRIORITY_GROUP, SNAME);

ALTER TABLE NULLID.REPCAT$_PRIORITY_GROUP ADD CONSTRAINT REPCAT$_PRIORITY_GROUP_U1 UNIQUE (SNAME, PRIORITY_GROUP, DATA_TYPE_ID, FIXED_DATA_LENGTH);

ALTER TABLE NULLID.LOGMNR_USER$ ADD CONSTRAINT SYS_C001050 PRIMARY KEY (LOGMNR_UID, USER#);

ALTER TABLE NULLID.ACCOUNT ADD CONSTRAINT PK_ACCOUNT PRIMARY KEY (ACCOUNTID);

ALTER TABLE NULLID.APPFILES ADD CONSTRAINT PK_APPFILES PRIMARY KEY (UNID);

ALTER TABLE NULLID.LOGMNR_DICTIONARY$ ADD CONSTRAINT SYS_C001043 PRIMARY KEY (LOGMNR_UID);

ALTER TABLE NULLID.HELP ADD CONSTRAINT HELP_TOPIC_SEQ PRIMARY KEY (TOPIC, SEQ);

ALTER TABLE NULLID.REPCAT$_REPCAT ADD CONSTRAINT REPCAT$_REPCAT_PRIMARY PRIMARY KEY (SNAME, GOWNER);

ALTER TABLE NULLID.REPCAT$_OBJECT_TYPES ADD CONSTRAINT REPCAT$_OBJECT_TYPE_PK PRIMARY KEY (OBJECT_TYPE_ID);

ALTER TABLE NULLID.SEQUENCES ADD CONSTRAINT PK_SEQUENCES PRIMARY KEY (ID);

ALTER TABLE NULLID.STOP_FACTORS ADD CONSTRAINT PK_STOP_FACTORS PRIMARY KEY (ID_STOP_FACTOR);

ALTER TABLE NULLID.OWNERSHIP_FORM_TYPE ADD CONSTRAINT PK_OWNERSHIP_FORM_TYPE PRIMARY KEY (ID_OWNERSHIP_FORM_TYPE);

ALTER TABLE NULLID.REPCAT$_INSTANTIATION_DDL ADD CONSTRAINT REPCAT$_INSTANTIATION_DDL_PK PRIMARY KEY (REFRESH_TEMPLATE_ID, PHASE, DDL_NUM);

ALTER TABLE NULLID.LIMIT_TYPE ADD CONSTRAINT PK_LIMIT_TYPE PRIMARY KEY (ID_LIMIT_TYPE);

ALTER TABLE NULLID.LOGMNR_CCOL$ ADD CONSTRAINT SYS_C001059 PRIMARY KEY (LOGMNR_UID, CON#, INTCOL#);

ALTER TABLE NULLID.LOGMNR_TYPE$ ADD CONSTRAINT SYS_C001054 PRIMARY KEY (LOGMNR_UID, TOID, VERSION#);

ALTER TABLE NULLID.WM$UDTRIG_INFO ADD CONSTRAINT WM$UDTRIG_INFO_PK PRIMARY KEY (TRIG_OWNER_NAME, TRIG_NAME);

ALTER TABLE NULLID.APPLICATIONS ADD CONSTRAINT SYS_C002728 PRIMARY KEY (IDAPPLICATION);

ALTER TABLE NULLID.REPCAT$_REPCATLOG ADD CONSTRAINT REPCAT$_REPCATLOG_PRIMARY PRIMARY KEY (ID, SOURCE, ROLE, MASTER);

ALTER TABLE NULLID.MVIEW$_ADV_OUTPUT ADD CONSTRAINT MVIEW$_ADV_OUTPUT_PK PRIMARY KEY (RUNID#, RANK#);

ALTER TABLE NULLID.REPCAT$_TEMPLATE_SITES ADD CONSTRAINT REPCAT$_TEMPLATE_SITES_PK PRIMARY KEY (TEMPLATE_SITE_ID);

ALTER TABLE NULLID.REPCAT$_TEMPLATE_SITES ADD CONSTRAINT REPCAT$_TEMPLATE_SITES_U1 UNIQUE (REFRESH_TEMPLATE_NAME, USER_NAME, SITE_NAME, REPAPI_SITE_ID);

ALTER TABLE NULLID.DEF$_AQCALL ADD CONSTRAINT SYS_C001025 PRIMARY KEY (ENQ_TID, STEP_NO);

ALTER TABLE NULLID.REPCAT$_EXCEPTIONS ADD CONSTRAINT REPCAT$_EXCEPTIONS_PK PRIMARY KEY (EXCEPTION_ID);

ALTER TABLE NULLID.RATING_TYPE ADD CONSTRAINT PK_RATING PRIMARY KEY (ID_RATING_TYPE);

ALTER TABLE NULLID.REPCAT$_TEMPLATE_TARGETS ADD CONSTRAINT TEMPLATE$_TARGETS_PK PRIMARY KEY (TEMPLATE_TARGET_ID);

ALTER TABLE NULLID.REPCAT$_EXTENSION ADD CONSTRAINT SYS_C001243 PRIMARY KEY (EXTENSION_ID);

ALTER TABLE NULLID.MVIEW$_ADV_FJG ADD CONSTRAINT MVIEW$_ADV_FJG_PK PRIMARY KEY (FJGID#);

ALTER TABLE NULLID.MVIEW$_ADV_LOG ADD CONSTRAINT MVIEW$_ADV_LOG_PK PRIMARY KEY (RUNID#);

ALTER TABLE NULLID.DEF$_DESTINATION ADD CONSTRAINT DEF$_DESTINATION_PRIMARY PRIMARY KEY (DBLINK, CATCHUP);

ALTER TABLE NULLID.LOGMNR_COL$ ADD CONSTRAINT SYS_C001046 PRIMARY KEY (LOGMNR_UID, OBJ#, INTCOL#);

ALTER TABLE NULLID.CRM_APPLICATIONS ADD CONSTRAINT ID PRIMARY KEY (ID_APPLICATION);

ALTER TABLE NULLID.REPCAT$_PRIORITY ADD CONSTRAINT REPCAT$_PRIORITY_PK PRIMARY KEY (SNAME, PRIORITY_GROUP, PRIORITY);

ALTER TABLE NULLID.ROLEEJB ADD CONSTRAINT PK_ROLEEJB PRIMARY KEY (ROLE1);

ALTER TABLE NULLID.CRM_CONTRACTOR ADD CONSTRAINT CONTRACTOR PRIMARY KEY (CONTRACTOR);

ALTER TABLE NULLID.STOP_FACTORS_GROUPS ADD CONSTRAINT PK_STOP_FACTORS_GROUPS PRIMARY KEY (ID_STOP_FACTORS_GROUPS);

ALTER TABLE NULLID.MVIEW$_ADV_FILTER ADD CONSTRAINT MVIEW$_ADV_FILTER_PK PRIMARY KEY (FILTERID#, SUBFILTERNUM#);

ALTER TABLE NULLID.AQ$_QUEUES ADD CONSTRAINT AQ$_QUEUES_PRIMARY PRIMARY KEY (OID);

ALTER TABLE NULLID.AQ$_QUEUES ADD CONSTRAINT AQ$_QUEUES_CHECK UNIQUE (NAME, TABLE_OBJNO);

ALTER TABLE NULLID.REPCAT$_AUDIT_ATTRIBUTE ADD CONSTRAINT REPCAT$_AUDIT_ATTRIBUTE_PK PRIMARY KEY (ATTRIBUTE);

ALTER TABLE NULLID.LOGMNR_DICTSTATE$ ADD CONSTRAINT SYS_C001041 PRIMARY KEY (LOGMNR_UID);

ALTER TABLE NULLID.TYPEOFDOCUMENT ADD CONSTRAINT SYS_C002733 PRIMARY KEY (IDTYPE);

ALTER TABLE NULLID.DEF$_ERROR ADD CONSTRAINT DEF$_ERROR_PRIMARY PRIMARY KEY (ENQ_TID);

ALTER TABLE NULLID.RUSBANK ADD CONSTRAINT SYS_C002725 PRIMARY KEY (ID);

ALTER TABLE NULLID.RUSBANK ADD CONSTRAINT SYS_C002726 UNIQUE (ID);

ALTER TABLE NULLID.COMPANYEJB ADD CONSTRAINT PK_COMPANYEJB PRIMARY KEY (COMPANY);

ALTER TABLE NULLID.LOGMNR_TABCOMPART$ ADD CONSTRAINT SYS_C001053 PRIMARY KEY (LOGMNR_UID, OBJ#);

ALTER TABLE NULLID.ORGANIZATIONS ADD CONSTRAINT PK_ORGANIZATIONS PRIMARY KEY (ID_CONTRACTOR);

ALTER TABLE NULLID.ROLES ADD CONSTRAINT PK_CONSTR_ROLES PRIMARY KEY (ID_ROLES);

ALTER TABLE NULLID.MVIEW$_ADV_CLIQUE ADD CONSTRAINT MVIEW$_ADV_CLIQUE_PK PRIMARY KEY (CLIQUEID#);

ALTER TABLE NULLID.META_SIMPLEVOCABULARY ADD CONSTRAINT PK_META_SIMPLEVOCABULARY PRIMARY KEY (ID_VOCABULARY);

ALTER TABLE NULLID.SHAREHOLDERS ADD CONSTRAINT PK_SHAREHOLDERS PRIMARY KEY (ID_SHAREHOLDER);

ALTER TABLE NULLID.REPCAT$_SITES_NEW ADD CONSTRAINT REPCAT$_SITES_NEW_PK PRIMARY KEY (EXTENSION_ID, GOWNER, GNAME, DBLINK);

ALTER TABLE NULLID.LOGMNR_ATTRCOL$ ADD CONSTRAINT SYS_C001047 PRIMARY KEY (LOGMNR_UID, OBJ#, INTCOL#);

ALTER TABLE NULLID.LOGMNR_PROCESSED_LOG$ ADD CONSTRAINT SYS_C001062 PRIMARY KEY (SESSION#, THREAD#);

ALTER TABLE NULLID.LOGMNR_TABSUBPART$ ADD CONSTRAINT SYS_C001052 PRIMARY KEY (LOGMNR_UID, OBJ#, POBJ#);

ALTER TABLE NULLID.REPCAT$_REPCOLUMN ADD CONSTRAINT REPCAT$_REPCOLUMN_PK PRIMARY KEY (SNAME, ONAME, TYPE, CNAME);

ALTER TABLE NULLID.LOGMNR_OBJ$ ADD CONSTRAINT SYS_C001044 PRIMARY KEY (LOGMNR_UID, OBJ#);

ALTER TABLE NULLID.REPCAT$_USER_PARM_VALUES ADD CONSTRAINT REPCAT$_USER_PARM_VALUES_PK PRIMARY KEY (USER_PARAMETER_ID);

ALTER TABLE NULLID.REPCAT$_USER_PARM_VALUES ADD CONSTRAINT REPCAT$_USER_PARM_VALUES_U1 UNIQUE (TEMPLATE_PARAMETER_ID, USER_ID);

ALTER TABLE NULLID.DEF$_PUSHED_TRANSACTIONS ADD CONSTRAINT DEF$_PUSHED_TRAN_PRIMARY PRIMARY KEY (SOURCE_SITE_ID);

ALTER TABLE NULLID.MSUSEREJB ADD CONSTRAINT PK_MSUSEREJB PRIMARY KEY (MSUCODE);

ALTER TABLE NULLID.CONTRACTOR_TYPE ADD CONSTRAINT PK_CONTRACTOR_TYPE PRIMARY KEY (ID_CONTRACTOR_TYPE);

ALTER TABLE NULLID.REPCAT$_GROUPED_COLUMN ADD CONSTRAINT REPCAT$_GROUPED_COLUMN_PK PRIMARY KEY (SNAME, ONAME, GROUP_NAME, COLUMN_NAME, POS);

ALTER TABLE NULLID.APPLICATIONFILES ADD CONSTRAINT SYS_C002727 PRIMARY KEY (IDFILE);

ALTER TABLE NULLID.REPCAT$_USER_AUTHORIZATIONS ADD CONSTRAINT REPCAT$_USER_AUTHORIZATIONS_PK PRIMARY KEY (USER_AUTHORIZATION_ID);

ALTER TABLE NULLID.REPCAT$_USER_AUTHORIZATIONS ADD CONSTRAINT REPCAT$_USER_AUTHORIZATIONS_U1 UNIQUE (USER_ID, REFRESH_TEMPLATE_ID);

ALTER TABLE NULLID.REPCAT$_FLAVORS ADD CONSTRAINT REPCAT$_FLAVORS_UNQ1 UNIQUE (GNAME, FLAVOR_ID, GOWNER);

ALTER TABLE NULLID.CONTRACTORS ADD CONSTRAINT PK_CONTRACTORS PRIMARY KEY (ID_CONTRACTOR);

ALTER TABLE NULLID.MVIEW$_ADV_GC ADD CONSTRAINT MVIEW$_ADV_GC_PK PRIMARY KEY (GCID#);

ALTER TABLE NULLID.MVIEW$_ADV_ROLLUP ADD CONSTRAINT MVIEW$_ADV_ROLLUP_PK PRIMARY KEY (RUNID#, CLEVELID#, PLEVELID#);

ALTER TABLE NULLID.REPCAT$_TEMPLATE_PARMS ADD CONSTRAINT REPCAT$_TEMPLATE_PARMS_PK PRIMARY KEY (TEMPLATE_PARAMETER_ID);

ALTER TABLE NULLID.REPCAT$_TEMPLATE_PARMS ADD CONSTRAINT REPCAT$_TEMPLATE_PARMS_U1 UNIQUE (REFRESH_TEMPLATE_ID, PARAMETER_NAME);

ALTER TABLE NULLID.REPCAT$_SITE_OBJECTS ADD CONSTRAINT REPCAT$_SITE_OBJECTS_U1 UNIQUE (TEMPLATE_SITE_ID, ONAME, OBJECT_TYPE_ID, SNAME);

ALTER TABLE NULLID.REPCAT$_PARAMETER_COLUMN ADD CONSTRAINT REPCAT$_PARAMETER_COLUMN_PK PRIMARY KEY (SNAME, ONAME, CONFLICT_TYPE_ID, REFERENCE_NAME, SEQUENCE_NO, PARAMETER_TABLE_NAME, PARAMETER_SEQUENCE_NO, COLUMN_POS);

ALTER TABLE NULLID.LOGMNR_ATTRIBUTE$ ADD CONSTRAINT SYS_C001056 PRIMARY KEY (LOGMNR_UID, TOID, VERSION#, ATTRIBUTE#);

ALTER TABLE NULLID.LOGMNR_TABPART$ ADD CONSTRAINT SYS_C001051 PRIMARY KEY (LOGMNR_UID, OBJ#, BO#);

ALTER TABLE NULLID.LOGMNR_LOB$ ADD CONSTRAINT SYS_C001057 PRIMARY KEY (LOGMNR_UID, OBJ#, INTCOL#);

ALTER TABLE NULLID.AQ$_QUEUE_TABLES ADD CONSTRAINT AQ$_QUEUE_TABLES_PRIMARY PRIMARY KEY (OBJNO);

ALTER TABLE NULLID.DOCUMENTS_TYPE ADD CONSTRAINT PK_DOCUMENT_TYPE PRIMARY KEY (ID_DOCUMENT_TYPE);

ALTER TABLE NULLID.FILE_REQUEST ADD CONSTRAINT PK_FILE_REQUEST PRIMARY KEY (ID_REQUEST);

ALTER TABLE NULLID.MVIEW$_ADV_WORKLOAD ADD CONSTRAINT MVIEW$_ADV_WORKLOAD_PK PRIMARY KEY (QUERYID#);

ALTER TABLE NULLID.DEF$_AQERROR ADD CONSTRAINT SYS_C001027 PRIMARY KEY (ENQ_TID, STEP_NO);

ALTER TABLE NULLID.WORKPOSITIONEJB ADD CONSTRAINT PK_WORKPOSITIONEJB PRIMARY KEY (WORKPOSITION);

ALTER TABLE NULLID.TARGET_TYPE ADD CONSTRAINT PK_TARGET_TYPE PRIMARY KEY (ID_TARGET_TYPE);

ALTER TABLE NULLID.DEF$_PROPAGATOR ADD CONSTRAINT DEF$_PROPAGATOR_PRIMARY PRIMARY KEY (USERID);

ALTER TABLE NULLID.PATTERN_DOCS ADD CONSTRAINT PK_PATTERN PRIMARY KEY (ID_PATTERN);

ALTER TABLE NULLID.STOP_FACTOR_FOR_CONTRACTOR ADD CONSTRAINT PK_STOP_FACTOR_FOR_CONTRACTOR PRIMARY KEY (ID_STOP_FACTOR, ID_CONTRACTOR);

ALTER TABLE NULLID.LOGMNR_SPILL$ ADD CONSTRAINT SYS_C001063 PRIMARY KEY (SESSION#, XIDUSN, XIDSLT, XIDSQN, CHUNK);

ALTER TABLE NULLID.REPCAT$_TEMPLATE_REFGROUPS ADD CONSTRAINT REPCAT$_TEMPLATE_REFGROUPS_PK PRIMARY KEY (REFRESH_GROUP_ID);

ALTER TABLE NULLID.MVIEW$_ADV_AJG ADD CONSTRAINT MVIEW$_ADV_AJG_PK PRIMARY KEY (AJGID#);

ALTER TABLE NULLID.MVIEW$_ADV_JOURNAL ADD CONSTRAINT MVIEW$_ADV_JOURNAL_PK PRIMARY KEY (RUNID#, SEQ#);

ALTER TABLE NULLID.REPCAT$_TEMPLATE_STATUS ADD CONSTRAINT REPCAT$_TEMPLATE_STATUS_PK PRIMARY KEY (TEMPLATE_STATUS_ID);

ALTER TABLE NULLID.OPERATOREJB ADD CONSTRAINT PK_OPERATOREJB PRIMARY KEY (OPERATOR);

ALTER TABLE NULLID.REPCAT$_REPPROP ADD CONSTRAINT REPCAT$_REPPROP_PRIMARY PRIMARY KEY (SNAME, ONAME, TYPE, DBLINK);

ALTER TABLE NULLID.LOGMNR_IND$ ADD CONSTRAINT SYS_C001049 PRIMARY KEY (LOGMNR_UID, OBJ#);

ALTER TABLE NULLID.COMMISSION_TYPE ADD CONSTRAINT PK_COMMISSION_TYPE PRIMARY KEY (ID_COMMISSION_TYPE);

ALTER TABLE NULLID.MVIEW$_ADV_ELIGIBLE ADD CONSTRAINT MVIEW$_ADV_ELIGIBLE_PK PRIMARY KEY (SUMOBJN#, RUNID#);

ALTER TABLE NULLID.LINK_OWNFORM_DOCTYPE ADD CONSTRAINT PK_LINK_OWNFORM_DOCTYPE PRIMARY KEY (ID_DOCUMENT_TYPE, ID_OWNERSHIP_FORM_TYPE);

ALTER TABLE NULLID.PATTERN_INTEREST_RATE ADD CONSTRAINT PK_PATTERN_INTEREST_RATE PRIMARY KEY (ID_PATTERN_INTEREST_RATE);

ALTER TABLE NULLID.LOGMNR_TS$ ADD CONSTRAINT SYS_C001048 PRIMARY KEY (LOGMNR_UID, TS#);

ALTER TABLE NULLID.REPCAT$_OBJECT_PARMS ADD CONSTRAINT REPCAT$_OBJECT_PARMS_PK PRIMARY KEY (TEMPLATE_PARAMETER_ID, TEMPLATE_OBJECT_ID);

ALTER TABLE NULLID.LOGMNR_CDEF$ ADD CONSTRAINT SYS_C001058 PRIMARY KEY (LOGMNR_UID, CON#);

ALTER TABLE NULLID.REPCAT$_TEMPLATE_TYPES ADD CONSTRAINT REPCAT$_TEMPLATE_TYPES_PK PRIMARY KEY (TEMPLATE_TYPE_ID);

ALTER TABLE NULLID.REPCAT$_CONFLICT ADD CONSTRAINT REPCAT$_CONFLICT_PK PRIMARY KEY (SNAME, ONAME, CONFLICT_TYPE_ID, REFERENCE_NAME);

ALTER TABLE NULLID.REPCAT$_TEMPLATE_OBJECTS ADD CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_PK PRIMARY KEY (TEMPLATE_OBJECT_ID);

ALTER TABLE NULLID.REPCAT$_TEMPLATE_OBJECTS ADD CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_U1 UNIQUE (OBJECT_NAME, OBJECT_TYPE, REFRESH_TEMPLATE_ID, SCHEMA_NAME, DDL_NUM);

ALTER TABLE NULLID.REPCAT$_RESOLUTION_METHOD ADD CONSTRAINT REPCAT$_RESOL_METHOD_PK PRIMARY KEY (CONFLICT_TYPE_ID, METHOD_NAME);

ALTER TABLE NULLID.OPPORTUNITY_TYPE ADD CONSTRAINT PK_OPPORTUNITY_TYPE PRIMARY KEY (ID_OPPORTUNITY_TYPE);

ALTER TABLE NULLID.PEOPLEEJB ADD CONSTRAINT PK_PEOPLEEJB PRIMARY KEY (MAN);

ALTER TABLE NULLID.REPCAT$_GENERATED ADD CONSTRAINT REPCAT$_REPGEN_PRIMARY PRIMARY KEY (SNAME, ONAME, TYPE, BASE_SNAME, BASE_ONAME, BASE_TYPE);

ALTER TABLE NULLID.REPCAT$_REPSCHEMA ADD CONSTRAINT REPCAT$_REPSCHEMA_PRIMARY PRIMARY KEY (SNAME, DBLINK, GOWNER);

ALTER TABLE NULLID.WORKEREJB ADD CONSTRAINT PK_WORKEREJB PRIMARY KEY (WORKER);

ALTER TABLE NULLID.REPCAT$_REFRESH_TEMPLATES ADD CONSTRAINT REPCAT$_REFRESH_TEMPLATES_PK PRIMARY KEY (REFRESH_TEMPLATE_ID);

ALTER TABLE NULLID.REPCAT$_REFRESH_TEMPLATES ADD CONSTRAINT REPCAT$_REFRESH_TEMPLATES_U1 UNIQUE (REFRESH_TEMPLATE_NAME);

ALTER TABLE NULLID.DEF$_CALLDEST ADD CONSTRAINT DEF$_CALLDEST_PRIMARY PRIMARY KEY (ENQ_TID, DBLINK, STEP_NO);

ALTER TABLE NULLID.PATTERN_PAID_PERCENT_TYPE ADD CONSTRAINT PK_PATTERN_PAID_PERCENT_TYPE PRIMARY KEY (ID_PAID_PERCENT_TYPE);

ALTER TABLE NULLID.REPCAT$_KEY_COLUMNS ADD CONSTRAINT REPCAT$_KEY_COLUMNS_PRIMARY PRIMARY KEY (SNAME, ONAME, COL);

ALTER TABLE NULLID.AQ$_INTERNET_AGENTS ADD CONSTRAINT SYS_C001015 PRIMARY KEY (AGENT_NAME);

ALTER TABLE NULLID.AQ$_INTERNET_AGENTS ADD CONSTRAINT UNQ_CONN_USERNAME UNIQUE (AGENT_NAME);

ALTER TABLE NULLID.SPO_SETTINGS ADD CONSTRAINT PK_SPO_SETTINGS PRIMARY KEY (ID_DEPARTMENT);

ALTER TABLE NULLID.AQ$_SCHEDULES ADD CONSTRAINT AQ$_SCHEDULES_PRIMARY PRIMARY KEY (OID, DESTINATION);

ALTER TABLE NULLID.AQ$_SCHEDULES ADD CONSTRAINT AQ$_SCHEDULES_CHECK UNIQUE (JOBNO);

ALTER TABLE NULLID.DIVISIONEJB ADD CONSTRAINT PK_DIVISIONEJB PRIMARY KEY (DIVISION);

ALTER TABLE NULLID.PROFILEEJB ADD CONSTRAINT PK_PROFILEEJB PRIMARY KEY (OPERATORID, KEY1, NAME);

CREATE OR REPLACE VIEW SYSTEM.AQ$DEF$_AQERROR (QUEUE, MSG_ID, CORR_ID, MSG_PRIORITY, MSG_STATE, DELAY, EXPIRATION, ENQ_TIME, ENQ_USER_ID, ENQ_TXN_ID, DEQ_TIME, DEQ_USER_ID, DEQ_TXN_ID, RETRY_COUNT, EXCEPTION_QUEUE_OWNER, EXCEPTION_QUEUE, USER_DATA, ORIGINAL_QUEUE_NAME, ORIGINAL_QUEUE_OWNER, EXPIRATION_REASON) AS
SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED') MSG_STATE, delay, expiration, enq_time, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, deq_time, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL, 'TIME_EXPIRATION',
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON  FROM SYSTEM.DEF$_AQERROR WITH READ ONLY;

CREATE OR REPLACE VIEW SYSTEM.MVIEW_WORKLOAD (WORKLOADID, IMPORT_TIME, QUERYID, APPLICATION, CARDINALITY, RESULTSIZE, LASTUSE, FREQUENCY, OWNER, PRIORITY, QUERY, RESPONSETIME) AS
select
  a.collectionid# as workloadid,
  a.collecttime as import_time,
  a.queryid# as queryid,
  a.application,
  a.cardinality,
  a.resultsize,
  a.qdate as lastuse,
  a.frequency,
  a.uname as owner,
  a.priority,
  a.sql_text as query,
  a.exec_time as responsetime
from SYSTEM.MVIEW$_ADV_WORKLOAD A, SYSTEM.MVIEW$_ADV_LOG B
WHERE a.collectionid# = b.runid# AND b.uname = USER;

CREATE OR REPLACE VIEW SYSTEM.MVIEW_EXCEPTIONS (RUNID, OWNER, TABLE_NAME, DIMENSION_NAME, RELATIONSHIP, BAD_ROWID) AS
select
  t1.runid# as runid,
  owner,
  table_name,
  dimension_name,
  relationship,
  bad_rowid
from SYSTEM.MVIEW$_ADV_EXCEPTIONS t1, SYSTEM.MVIEW$_ADV_LOG t2
where
  t1.runid# = t2.runid# and
  user = t2.uname;

CREATE OR REPLACE VIEW SYSTEM.MVIEW_FILTERINSTANCE (RUNID, FILTERID, SUBFILTERNUM, SUBFILTERTYPE, STR_VALUE, NUM_VALUE1, NUM_VALUE2, DATE_VALUE1, DATE_VALUE2) AS
select
      a.runid# as runid,
      a.filterid# as filterid,
      a.subfilternum# as subfilternum,
      decode(a.subfiltertype,1,'APPLICATION',2,'CARDINALITY',3,'LASTUSE',
                             4,'FREQUENCY',5,'OWNER',6,'PRIORITY',7,'BASETABLE',
                             8,'RESPONSETIME',9,'COLLECTIONID',10,'TRACENAME',
                             'UNKNOWN') AS subfiltertype,
      a.str_value,
      to_number(decode(a.num_value1,-999,NULL,a.num_value1)) AS num_value1,
      to_number(decode(a.num_value2,-999,NULL,a.num_value2)) AS num_value2,
      a.date_value1,
      a.date_value2
   from system.mview$_adv_filterinstance a;

CREATE OR REPLACE VIEW SYSTEM.MVIEW_FILTER (FILTERID, SUBFILTERNUM, SUBFILTERTYPE, STR_VALUE, NUM_VALUE1, NUM_VALUE2, DATE_VALUE1, DATE_VALUE2) AS
select
      a.filterid# as filterid,
      a.subfilternum# as subfilternum,
      decode(a.subfiltertype,1,'APPLICATION',2,'CARDINALITY',3,'LASTUSE',
                             4,'FREQUENCY',5,'OWNER',6,'PRIORITY',7,'BASETABLE',
                             8,'RESPONSETIME',9,'COLLECTIONID',10,'TRACENAME',
                             'UNKNOWN') AS subfiltertype,
      a.str_value,
      to_number(decode(a.num_value1,-999,NULL,a.num_value1)) AS num_value1,
      to_number(decode(a.num_value2,-999,NULL,a.num_value2)) AS num_value2,
      a.date_value1,
      a.date_value2
   from system.mview$_adv_filter a, system.mview$_adv_log b
   WHERE a.filterid# = b.runid# AND b.uname = USER;

CREATE OR REPLACE VIEW SYSTEM.MVIEW_LOG (ID, FILTERID, RUN_BEGIN, RUN_END, TYPE, STATUS, MESSAGE, COMPLETED, TOTAL, ERROR_CODE) AS
select
      runid# as id,
      filterid# as filterid,
      run_begin,
      run_end,
      decode(run_type,1,'EVALUATE',2,'EVALUATE_W',3,'RECOMMEND',
                      4,'RECOMMEND_W',5,'VALIDATE',6,'WORKLOAD',
                      7,'FILTER','UNKNOWN') AS type,
      decode(status,0,'UNUSED',1,'CANCELLED',2,'IN_PROGRESS',3,'COMPLETED',
                    4,'ERROR','UNKNOWN') AS status,
      message,
      completed,
      total,
      error_code
   from system.mview$_adv_log
   where uname = USER;

CREATE OR REPLACE VIEW SYSTEM.MVIEW_EVALUATIONS (RUNID, MVIEW_OWNER, MVIEW_NAME, RANK, STORAGE_IN_BYTES, FREQUENCY, CUMULATIVE_BENEFIT, BENEFIT_TO_COST_RATIO) AS
select
  t1.runid# as runid,
  summary_owner AS mview_owner,
  summary_name AS mview_name,
  rank# as rank,
  storage_in_bytes,
  frequency,
  cumulative_benefit,
  benefit_to_cost_ratio
from SYSTEM.MVIEW$_ADV_OUTPUT t1, SYSTEM.MVIEW$_ADV_LOG t2
where
  t1.runid# = t2.runid# and
  user = t2.uname and
  t1.output_type = 1
order by t1.rank#;

CREATE OR REPLACE VIEW SYSTEM.AQ$DEF$_AQCALL (QUEUE, MSG_ID, CORR_ID, MSG_PRIORITY, MSG_STATE, DELAY, EXPIRATION, ENQ_TIME, ENQ_USER_ID, ENQ_TXN_ID, DEQ_TIME, DEQ_USER_ID, DEQ_TXN_ID, RETRY_COUNT, EXCEPTION_QUEUE_OWNER, EXCEPTION_QUEUE, USER_DATA, ORIGINAL_QUEUE_NAME, ORIGINAL_QUEUE_OWNER, EXPIRATION_REASON) AS
SELECT q_name QUEUE, msgid MSG_ID, corrid CORR_ID, priority MSG_PRIORITY, decode(state, 0,   'READY',
                                1,   'WAIT',
                                2,   'PROCESSED',
                                3,   'EXPIRED') MSG_STATE, delay, expiration, enq_time, enq_uid ENQ_USER_ID, enq_tid ENQ_TXN_ID, deq_time, deq_uid DEQ_USER_ID, deq_tid DEQ_TXN_ID, retry_count,  decode (state, 0, exception_qschema, 
                                  1, exception_qschema, 
                                  2, exception_qschema,  
                                  NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                  1, exception_queue, 
                                  2, exception_queue,  
                                  NULL) EXCEPTION_QUEUE,  user_data,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_queue), NULL)
                                ORIGINAL_QUEUE_NAME,  decode (state, 3, 
                     decode (deq_tid, 'INVALID_TRANSACTION', NULL, 
                             exception_qschema), NULL)
                                ORIGINAL_QUEUE_OWNER,  decode(state, 3, 
                     decode(deq_time, NULL, 
                       decode(deq_tid, NULL, 'TIME_EXPIRATION',
                              'INVALID_TRANSACTION', NULL,
                              'MAX_RETRY_EXCEEDED'), NULL), NULL) 
                             EXPIRATION_REASON  FROM SYSTEM.DEF$_AQCALL WITH READ ONLY;

CREATE OR REPLACE VIEW SYSTEM.MVIEW_RECOMMENDATIONS (RUNID, ALL_TABLES, FACT_TABLES, GROUPING_LEVELS, QUERY_TEXT, RECOMMENDATION_NUMBER, RECOMMENDED_ACTION, MVIEW_OWNER, MVIEW_NAME, STORAGE_IN_BYTES, PCT_PERFORMANCE_GAIN, BENEFIT_TO_COST_RATIO) AS
select
  t1.runid# as runid,
  t1.from_clause as all_tables,
  fact_tables,
  grouping_levels,
  query_text,
  rank# as recommendation_number,
  action_type as recommended_action,
  summary_owner as mview_owner,
  summary_name as mview_name,
  storage_in_bytes,
  pct_performance_gain,
  benefit_to_cost_ratio
from SYSTEM.MVIEW$_ADV_OUTPUT t1, SYSTEM.MVIEW$_ADV_LOG t2
where
  t1.runid# = t2.runid# and
  user = t2.uname and
  t1.output_type = 0
order by t1.rank#;

CREATE OR REPLACE VIEW SYSTEM.PRODUCT_PRIVS (PRODUCT, USERID, ATTRIBUTE, SCOPE, NUMERIC_VALUE, CHAR_VALUE, DATE_VALUE, LONG_VALUE) AS
SELECT PRODUCT, USERID, ATTRIBUTE, SCOPE,
         NUMERIC_VALUE, CHAR_VALUE, DATE_VALUE, LONG_VALUE
  FROM SQLPLUS_PRODUCT_PROFILE
  WHERE USERID = 'PUBLIC' OR USER LIKE USERID;

CREATE TRIGGER NULLID.ON_BEFORE_INSERT_MESSAGE 
	BEFORE INSERT ON NULLID.MESSAGE
	REFERENCING NEW AS NEW OLD AS OLD
	FOR EACH ROW
BEGIN
  --if (:new.idMessage is null) then
      select seq_id_message.nextval into :new.idMessage from dual;
      select CURRENT_TIMESTAMP, 0 into :new.mTimeStamp, :new.isRead from dual;
  --end if;
END;

CREATE TRIGGER NULLID.ON_BEFORE_INSERT_MANAGER 
	BEFORE INSERT ON NULLID.MANAGERS
	REFERENCING NEW AS NEW OLD AS OLD
	FOR EACH ROW
BEGIN
  --if (:new.idMessage is null) then
  select SEQ_ID_MANAGER.nextval into :new.ID_MANAGER from dual;

  --end if;
END;

CREATE TRIGGER NULLID.REPCATLOGTRIG 
	AFTER DELETE OR UPDATE ON NULLID.REPCAT$_REPCATLOG
	REFERENCING NEW AS NEW OLD AS OLD
	FOR EACH STATEMENT
BEGIN
  sys.dbms_alert.signal('repcatlog_alert', '');
END;

CREATE TRIGGER NULLID.TGR_BI_RUSBANK 
	BEFORE INSERT ON NULLID.RUSBANK
	REFERENCING NEW AS NEW OLD AS OLD
	FOR EACH ROW
begin
        if (:new.id is null) then
           select ai_rusbank.nextval into :new.id from dual;
        end if;
end;

CREATE TRIGGER NULLID.ON_BEFORE_INSERT_ORGANIZATION 
	BEFORE INSERT ON NULLID.ORGANIZATIONS
	REFERENCING NEW AS NEW OLD AS OLD
	FOR EACH ROW
BEGIN
  --if (:new.idMessage is null) then
      select SEQ_ID_CONTRACTOR.nextval into :new.ID_CONTRACTOR from dual;
  --end if;
END;

CREATE TRIGGER NULLID.ON_BI_META_SIMPLE_VOCABULARY 
	BEFORE INSERT ON NULLID.META_SIMPLEVOCABULARY
	REFERENCING NEW AS NEW OLD AS OLD
	FOR EACH ROW
BEGIN
  if (:new.ID_VOCABULARY is null) then
      select SEQ_ID_VOCABULARY.nextval into :new.ID_VOCABULARY from dual;
  end if;
END;

CREATE TRIGGER NULLID.ON_BEFORE_INSERT_SHAREHOLDER 
	BEFORE INSERT ON NULLID.SHAREHOLDERS
	REFERENCING NEW AS NEW OLD AS OLD
	FOR EACH ROW
BEGIN
  --if (:new.idMessage is null) then
      select SEQ_ID_SHAREHOLDER.nextval into :new.ID_SHAREHOLDER from dual;
  --end if;
END;

CREATE TRIGGER NULLID.DEF$_PROPAGATOR_TRIG 
	BEFORE INSERT ON NULLID.DEF$_PROPAGATOR
	REFERENCING NEW AS NEW OLD AS OLD
	FOR EACH STATEMENT
DECLARE
  prop_count  NUMBER;
BEGIN
  SELECT count(*) into prop_count
    FROM system.def$_propagator;

  IF (prop_count > 0) THEN
    -- Raise duplicate propagator error
    sys.dbms_sys_error.raise_system_error(-23394);
  END IF;
END;

COMMENT ON TABLE NULLID.MVIEW$_ADV_EXCEPTIONS IS
'Output table for dimension validations';

COMMENT ON TABLE NULLID.REPCAT$_RESOLUTION IS
'Description of all conflict resolutions in the database';

COMMENT ON TABLE NULLID.REPCAT$_REPGROUP_PRIVS IS
'Information about users who are registered for object group privileges';

COMMENT ON TABLE NULLID.REPCAT$_FLAVOR_OBJECTS IS
'Replicated objects in flavors';

COMMENT ON TABLE NULLID.REPCAT$_RESOL_STATS_CONTROL IS
'Information about statistics collection for conflict resolutions for all replicated tables in the database';

COMMENT ON TABLE NULLID.DEF$_LOB IS
'Storage for LOB parameters to deferred RPCs';

COMMENT ON TABLE NULLID.MVIEW$_ADV_SQLDEPEND IS
'Temporary table for workload collections';

COMMENT ON TABLE NULLID.DEF$_DEFAULTDEST IS
'Default destinations for deferred remote procedure calls';

COMMENT ON TABLE NULLID.REPCAT$_AUDIT_COLUMN IS
'Information about columns in all shadow tables for all replicated tables in the database';

COMMENT ON TABLE NULLID.MVIEW$_ADV_FILTERINSTANCE IS
'Table for workload filter instance definition';

COMMENT ON TABLE NULLID.MVIEW$_ADV_LEVEL IS
'Level definition';

COMMENT ON TABLE NULLID.REPCAT$_COLUMN_GROUP IS
'All column groups of replicated tables in the database';

COMMENT ON TABLE NULLID.MVIEW$_ADV_PARAMETERS IS
'Summary advisor tuning parameters';

COMMENT ON TABLE NULLID.REPCAT$_REPOBJECT IS
'Information about replicated objects';

COMMENT ON TABLE NULLID.REPCAT$_PRIORITY_GROUP IS
'Information about all priority groups in the database';

COMMENT ON TABLE NULLID.REPCAT$_REPCAT IS
'Information about all replicated object groups';

COMMENT ON TABLE NULLID.REPCAT$_OBJECT_TYPES IS
'Internal table for template object types.';

COMMENT ON TABLE NULLID.REPCAT$_INSTANTIATION_DDL IS
'Table containing supplementary DDL to be executed during instantiation.';

COMMENT ON TABLE NULLID.REPCAT$_REPCATLOG IS
'Information about asynchronous administration requests';

COMMENT ON TABLE NULLID.MVIEW$_ADV_TEMP IS
'Table for temporary data';

COMMENT ON TABLE NULLID.MVIEW$_ADV_OUTPUT IS
'Output table for summary recommendations and evaluations';

COMMENT ON TABLE NULLID.REPCAT$_EXCEPTIONS IS
'Repcat processing exceptions table.';

COMMENT ON TABLE NULLID.REPCAT$_SNAPGROUP IS
'Snapshot repgroup registration information';

COMMENT ON TABLE NULLID.REPCAT$_TEMPLATE_TARGETS IS
'Internal table for tracking potential target databases for templates.';

COMMENT ON TABLE NULLID.REPCAT$_EXTENSION IS
'Information about replication extension requests';

COMMENT ON TABLE NULLID.MVIEW$_ADV_FJG IS
'Representation for query join sub-graph not in AJG ';

COMMENT ON TABLE NULLID.MVIEW$_ADV_LOG IS
'Log all calls to summary advisory functions';

COMMENT ON TABLE NULLID.DEF$_DESTINATION IS
'Information about propagation to different destinations';

COMMENT ON TABLE NULLID.DEF$_ORIGIN IS
'Information about deferred transactions pushed to this site';

COMMENT ON TABLE NULLID.REPCAT$_PRIORITY IS
'Values and their corresponding priorities in all priority groups in the database';

COMMENT ON TABLE NULLID.MVIEW$_ADV_FILTER IS
'Table for workload filter definition';

COMMENT ON TABLE NULLID.REPCAT$_AUDIT_ATTRIBUTE IS
'Information about attributes automatically maintained for replication';

COMMENT ON TABLE NULLID.DEF$_ERROR IS
'Information about all deferred transactions that caused an error';

COMMENT ON TABLE NULLID.MVIEW$_ADV_CLIQUE IS
'Table for storing canonical form of Clique queries';

COMMENT ON TABLE NULLID.REPCAT$_SITES_NEW IS
'Information about new masters for replication extension';

COMMENT ON TABLE NULLID.REPCAT$_REPCOLUMN IS
'Replicated columns for a table sorted alphabetically in ascending order';

COMMENT ON TABLE NULLID.DEF$_PUSHED_TRANSACTIONS IS
'Information about deferred transactions pushed to this site by RepAPI clients';

COMMENT ON TABLE NULLID.REPCAT$_GROUPED_COLUMN IS
'Columns in all column groups of replicated tables in the database';

COMMENT ON TABLE NULLID.REPCAT$_FLAVORS IS
'Flavors defined for replicated object groups';

COMMENT ON TABLE NULLID.REPCAT$_RESOLUTION_STATISTICS IS
'Statistics for conflict resolutions for all replicated tables in the database';

COMMENT ON TABLE NULLID.MVIEW$_ADV_GC IS
'Group-by columns of a query';

COMMENT ON TABLE NULLID.MVIEW$_ADV_ROLLUP IS
'Each row repesents either a functional dependency or join-key relationship';

COMMENT ON TABLE NULLID.REPCAT$_DDL IS
'Arguments that do not fit in a single repcat log record';

COMMENT ON TABLE NULLID.REPCAT$_SITE_OBJECTS IS
'Table for maintaining database objects deployed at a site.';

COMMENT ON TABLE NULLID.DEF$_TEMP$LOB IS
'Storage for LOB parameters to RPCs';

COMMENT ON TABLE NULLID.REPCAT$_PARAMETER_COLUMN IS
'All columns used for resolving conflicts in the database';

COMMENT ON TABLE NULLID.MVIEW$_ADV_WORKLOAD IS
'Shared workload repository for DBA users of summary advisor';

COMMENT ON TABLE NULLID.DEF$_PROPAGATOR IS
'The propagator for deferred remote procedure calls';

COMMENT ON TABLE NULLID.REPCAT$_TEMPLATE_REFGROUPS IS
'Table for maintaining refresh group information for template.';

COMMENT ON TABLE NULLID.MVIEW$_ADV_PLAN IS
'Private plan table for estimate_mview_size operations';

COMMENT ON TABLE NULLID.MVIEW$_ADV_AJG IS
'Anchor-join graph representation';

COMMENT ON TABLE NULLID.MVIEW$_ADV_JOURNAL IS
'Summary advisor journal table for debugging and information';

COMMENT ON TABLE NULLID.REPCAT$_TEMPLATE_STATUS IS
'Table for template status and template status codes.';

COMMENT ON TABLE NULLID.REPCAT$_REPPROP IS
'Propagation information about replicated objects';

COMMENT ON TABLE NULLID.MVIEW$_ADV_ELIGIBLE IS
'Summary management rewrite eligibility information';

COMMENT ON TABLE NULLID.REPCAT$_TEMPLATE_TYPES IS
'Internal table for maintaining types of templates.';

COMMENT ON TABLE NULLID.REPCAT$_CONFLICT IS
'All conflicts for which users have specified resolutions in the database';

COMMENT ON TABLE NULLID.REPCAT$_RESOLUTION_METHOD IS
'All conflict resolution methods in the database';

COMMENT ON TABLE NULLID.MVIEW$_ADV_BASETABLE IS
'Base tables refered by a query';

COMMENT ON TABLE NULLID.REPCAT$_GENERATED IS
'Objects generated to support replication';

COMMENT ON TABLE NULLID.REPCAT$_REPSCHEMA IS
'N-way replication information';

COMMENT ON TABLE NULLID.REPCAT$_REFRESH_TEMPLATES IS
'Primary table containing deployment template information.';

COMMENT ON TABLE NULLID.DEF$_CALLDEST IS
'Information about call destinations for D-type and error transactions';

COMMENT ON TABLE NULLID.REPCAT$_KEY_COLUMNS IS
'Primary columns for a table using column-level replication';

COMMENT ON TABLE NULLID.MVIEW$_ADV_PRETTY IS
'Table for sql parsing';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION.SNAME IS
'Owner of replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION.ONAME IS
'Name of the replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION.CONFLICT_TYPE_ID IS
'Type of conflict';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION.REFERENCE_NAME IS
'Table name, unique constraint name, or column group name';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION.SEQUENCE_NO IS
'Ordering on resolution';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION.METHOD_NAME IS
'Name of the conflict resolution method';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION.FUNCTION_NAME IS
'Name of the resolution function';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION.PRIORITY_GROUP IS
'Name of the priority group used in conflict resolution';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION.RESOLUTION_COMMENT IS
'Description of the conflict resolution';

COMMENT ON COLUMN NULLID.REPCAT$_REPGROUP_PRIVS.USERID IS
'OBSOLETE COLUMN: Identifying number of the user';

COMMENT ON COLUMN NULLID.REPCAT$_REPGROUP_PRIVS.USERNAME IS
'Identifying name of the registered user';

COMMENT ON COLUMN NULLID.REPCAT$_REPGROUP_PRIVS.GOWNER IS
'Owner of the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPGROUP_PRIVS.GNAME IS
'Name of the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPGROUP_PRIVS.GLOBAL_FLAG IS
'1 if gname is NULL, 0 otherwise';

COMMENT ON COLUMN NULLID.REPCAT$_REPGROUP_PRIVS.CREATED IS
'Registration date';

COMMENT ON COLUMN NULLID.REPCAT$_REPGROUP_PRIVS.PRIVILEGE IS
'Registered privileges';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVOR_OBJECTS.FLAVOR_ID IS
'Flavor identifier';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVOR_OBJECTS.GOWNER IS
'Owner of the object group containing object';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVOR_OBJECTS.GNAME IS
'Object group containing object';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVOR_OBJECTS.SNAME IS
'Schema containing object';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVOR_OBJECTS.ONAME IS
'Name of object';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVOR_OBJECTS.TYPE IS
'Object type';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVOR_OBJECTS.VERSION# IS
'Version# of a user-defined type';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVOR_OBJECTS.HASHCODE IS
'Hashcode of a user-defined type';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVOR_OBJECTS.COLUMNS_PRESENT IS
'For tables, encoded mapping of columns present';

COMMENT ON COLUMN NULLID.REPCAT$_RESOL_STATS_CONTROL.SNAME IS
'Owner of replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_RESOL_STATS_CONTROL.ONAME IS
'Name of the replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_RESOL_STATS_CONTROL.CREATED IS
'Timestamp for which statistics collection was first started';

COMMENT ON COLUMN NULLID.REPCAT$_RESOL_STATS_CONTROL.STATUS IS
'Status of statistics collection: ACTIVE, CANCELLED';

COMMENT ON COLUMN NULLID.REPCAT$_RESOL_STATS_CONTROL.STATUS_UPDATE_DATE IS
'Timestamp for which the status was last updated';

COMMENT ON COLUMN NULLID.REPCAT$_RESOL_STATS_CONTROL.PURGED_DATE IS
'Timestamp for the last purge of statistics data';

COMMENT ON COLUMN NULLID.REPCAT$_RESOL_STATS_CONTROL.LAST_PURGE_START_DATE IS
'The last start date of the statistics purging date range';

COMMENT ON COLUMN NULLID.REPCAT$_RESOL_STATS_CONTROL.LAST_PURGE_END_DATE IS
'The last end date of the statistics purging date range';

COMMENT ON COLUMN NULLID.DEF$_LOB.ID IS
'Identifier of LOB parameter';

COMMENT ON COLUMN NULLID.DEF$_LOB.ENQ_TID IS
'Transaction identifier for deferred RPC with this LOB parameter';

COMMENT ON COLUMN NULLID.DEF$_LOB.BLOB_COL IS
'Binary LOB parameter';

COMMENT ON COLUMN NULLID.DEF$_LOB.CLOB_COL IS
'Character LOB parameter';

COMMENT ON COLUMN NULLID.DEF$_LOB.NCLOB_COL IS
'National Character LOB parameter';

COMMENT ON COLUMN NULLID.DEF$_DEFAULTDEST.DBLINK IS
'Default destination';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_COLUMN.SNAME IS
'Owner of the shadow table';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_COLUMN.ONAME IS
'Name of the shadow table';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_COLUMN.COLUMN_NAME IS
'Name of the column in the shadow table';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_COLUMN.BASE_SNAME IS
'Owner of replicated table';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_COLUMN.BASE_ONAME IS
'Name of the replicated table';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_COLUMN.BASE_CONFLICT_TYPE_ID IS
'Type of conflict';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_COLUMN.BASE_REFERENCE_NAME IS
'Table name, unique constraint name, or column group name';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_COLUMN.ATTRIBUTE IS
'Description of the attribute';

COMMENT ON COLUMN NULLID.REPCAT$_RUNTIME_PARMS.RUNTIME_PARM_ID IS
'Primary key of the parameter values table.';

COMMENT ON COLUMN NULLID.REPCAT$_RUNTIME_PARMS.PARAMETER_NAME IS
'Name of the parameter.';

COMMENT ON COLUMN NULLID.REPCAT$_RUNTIME_PARMS.PARM_VALUE IS
'Parameter value.';

COMMENT ON COLUMN NULLID.REPCAT$_COLUMN_GROUP.SNAME IS
'Owner of replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_COLUMN_GROUP.ONAME IS
'Name of the replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_COLUMN_GROUP.GROUP_NAME IS
'Name of the column group';

COMMENT ON COLUMN NULLID.REPCAT$_COLUMN_GROUP.GROUP_COMMENT IS
'Description of the column group';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.SNAME IS
'Name of the object owner';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.ONAME IS
'Name of the object';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.TYPE IS
'Type of the object';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.VERSION# IS
'Version of objects of TYPE';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.HASHCODE IS
'Hashcode of objects of TYPE';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.ID IS
'Identifier of the local object';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.OBJECT_COMMENT IS
'Description of the replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.STATUS IS
'Status of the last create or alter request on the local object';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.GENPACKAGE IS
'Status of whether the object needs to generate replication package';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.GENPLOGID IS
'Log id of message sent for generating package support';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.GENTRIGGER IS
'Status of whether the object needs to generate replication trigger';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.GENTLOGID IS
'Log id of message sent for generating trigger support';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.GOWNER IS
'Owner of the object''s object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.GNAME IS
'Name of the object''s object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPOBJECT.FLAG IS
'Information about replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY_GROUP.SNAME IS
'Name of the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY_GROUP.PRIORITY_GROUP IS
'Name of the priority group';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY_GROUP.DATA_TYPE_ID IS
'Datatype of the value in the priority group';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY_GROUP.FIXED_DATA_LENGTH IS
'Length of the value in bytes if the datatype is CHAR';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY_GROUP.PRIORITY_COMMENT IS
'Description of the priority group';

COMMENT ON COLUMN NULLID.REPCAT$_REPCAT.GOWNER IS
'Owner of the object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPCAT.SNAME IS
'Name of the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPCAT.MASTER IS
'Is the site a master site for the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPCAT.STATUS IS
'If the site is a master, the master''s status';

COMMENT ON COLUMN NULLID.REPCAT$_REPCAT.SCHEMA_COMMENT IS
'Description of the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPCAT.FLAVOR_ID IS
'Flavor identifier';

COMMENT ON COLUMN NULLID.REPCAT$_REPCAT.FLAG IS
'Miscellaneous repgroup info';

COMMENT ON COLUMN NULLID.REPCAT$_OBJECT_TYPES.OBJECT_TYPE_ID IS
'Internal primary key of the template object types table.';

COMMENT ON COLUMN NULLID.REPCAT$_OBJECT_TYPES.OBJECT_TYPE_NAME IS
'Descriptive name for the object type.';

COMMENT ON COLUMN NULLID.REPCAT$_OBJECT_TYPES.FLAGS IS
'Internal flags for object type processing.';

COMMENT ON COLUMN NULLID.REPCAT$_OBJECT_TYPES.SPARE1 IS
'Reserved for future use.';

COMMENT ON COLUMN NULLID.REPCAT$_INSTANTIATION_DDL.REFRESH_TEMPLATE_ID IS
'Primary key of template containing supplementary DDL.';

COMMENT ON COLUMN NULLID.REPCAT$_INSTANTIATION_DDL.DDL_TEXT IS
'Supplementary DDL string.';

COMMENT ON COLUMN NULLID.REPCAT$_INSTANTIATION_DDL.DDL_NUM IS
'Column for ordering of supplementary DDL.';

COMMENT ON COLUMN NULLID.REPCAT$_INSTANTIATION_DDL.PHASE IS
'Phase to execute the DDL string.';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.VERSION IS
'Version of the repcat log record';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.ID IS
'Identifying number of repcat log record';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.SOURCE IS
'Name of the database at which the request originated';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.USERID IS
'Name of the user who submitted the request';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.TIMESTAMP IS
'When the request was submitted';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.ROLE IS
'Is this database the masterdef for the request';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.MASTER IS
'Name of the database that processes this request$_ddl';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.SNAME IS
'Schema of replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.REQUEST IS
'Name of the requested operation';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.ONAME IS
'Replicated object name, if applicable';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.TYPE IS
'Type of replicated object, if applicable';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.A_COMMENT IS
'Textual argument used for comments';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.BOOL_ARG IS
'Boolean argument';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.ANO_BOOL_ARG IS
'Another Boolean argument';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.INT_ARG IS
'Integer argument';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.ANO_INT_ARG IS
'Another integer argument';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.LINES IS
'The number of rows in system.repcat$_ddl at the processing site';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.STATUS IS
'Status of the request at this database';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.MESSAGE IS
'Error message associated with processing the request';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.ERRNUM IS
'Oracle error number associated with processing the request';

COMMENT ON COLUMN NULLID.REPCAT$_REPCATLOG.GNAME IS
'Name of the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_SITES.TEMPLATE_SITE_ID IS
'Internal primary key of the REPCAT$_TEMPLATE_SITES table.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_SITES.REFRESH_TEMPLATE_NAME IS
'Name of the refresh group template.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_SITES.REFRESH_GROUP_NAME IS
'Name of the refresh group to create during instantiation.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_SITES.TEMPLATE_OWNER IS
'Owner of the refresh group template.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_SITES.USER_NAME IS
'Database user name.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_SITES.SITE_NAME IS
'Name of the site that has instantiated the template.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_SITES.REPAPI_SITE_ID IS
'Name of the site that has instantiated the template.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_SITES.STATUS IS
'Obsolete - do not use.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_SITES.REFRESH_TEMPLATE_ID IS
'Obsolete - do not use.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_SITES.USER_ID IS
'Obsolete - do not use.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_SITES.INSTANTIATION_DATE IS
'Date template was instantiated.';

COMMENT ON COLUMN NULLID.REPCAT$_EXCEPTIONS.EXCEPTION_ID IS
'Internal primary key of the exceptions table.';

COMMENT ON COLUMN NULLID.REPCAT$_EXCEPTIONS.USER_NAME IS
'User name of user submitting the exception.';

COMMENT ON COLUMN NULLID.REPCAT$_EXCEPTIONS.REQUEST IS
'Originating request containing the exception.';

COMMENT ON COLUMN NULLID.REPCAT$_EXCEPTIONS.JOB IS
'Originating job containing the exception.';

COMMENT ON COLUMN NULLID.REPCAT$_EXCEPTIONS.ERROR_DATE IS
'Date of occurance for the exception.';

COMMENT ON COLUMN NULLID.REPCAT$_EXCEPTIONS.ERROR_NUMBER IS
'Error number generating the exception.';

COMMENT ON COLUMN NULLID.REPCAT$_EXCEPTIONS.ERROR_MESSAGE IS
'Error message associated with the error generating the exception.';

COMMENT ON COLUMN NULLID.REPCAT$_EXCEPTIONS.LINE_NUMBER IS
'Line number of the exception.';

COMMENT ON COLUMN NULLID.REPCAT$_SNAPGROUP.GOWNER IS
'Owner of the snapshot repgroup';

COMMENT ON COLUMN NULLID.REPCAT$_SNAPGROUP.GNAME IS
'Name of the snapshot repgroup';

COMMENT ON COLUMN NULLID.REPCAT$_SNAPGROUP.DBLINK IS
'Database site of the snapshot repgroup';

COMMENT ON COLUMN NULLID.REPCAT$_SNAPGROUP.GROUP_COMMENT IS
'Description of the snapshot repgroup';

COMMENT ON COLUMN NULLID.REPCAT$_SNAPGROUP.REP_TYPE IS
'Identifier of flavor at snapshot';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_TARGETS.TEMPLATE_TARGET_ID IS
'Internal primary key of the template targets table.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_TARGETS.TARGET_DATABASE IS
'Global identifier of the target database.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_TARGETS.TARGET_COMMENT IS
'Comment on the target database.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_TARGETS.CONNECT_STRING IS
'The connection descriptor used to connect to the target database.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_TARGETS.SPARE1 IS
'The spare column';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.EXTENSION_ID IS
'Globally unique identifier for replication extension';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.EXTENSION_CODE IS
'Kind of replication extension';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.MASTERDEF IS
'Master definition site for replication extension';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.EXPORT_REQUIRED IS
'YES if this extension requires an export, and NO if no export is required';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.REPCATLOG_ID IS
'Identifier of repcatlog records related to replication extension';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.EXTENSION_STATUS IS
'Status of replication extension';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.FLASHBACK_SCN IS
'Flashback_scn for export or change-based recovery for replication extension';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.PUSH_TO_MDEF IS
'YES if existing masters partially push to masterdef, NO if no pushing';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.PUSH_TO_NEW IS
'YES if existing masters partially push to new masters, NO if no pushing';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.PERCENTAGE_FOR_CATCHUP_MDEF IS
'Fraction of push to masterdef cycle devoted to catching up';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.CYCLE_SECONDS_MDEF IS
'Length of push to masterdef cycle when catching up';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.PERCENTAGE_FOR_CATCHUP_NEW IS
'Fraction of push to new masters cycle devoted to catching up';

COMMENT ON COLUMN NULLID.REPCAT$_EXTENSION.CYCLE_SECONDS_NEW IS
'Length of push to new masters cycle when catching up';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.DBLINK IS
'Destination';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.LAST_DELIVERED IS
'Value of delivery_order of last transaction propagated';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.LAST_ENQ_TID IS
'Transaction ID of last transaction propagated';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.LAST_SEQ IS
'Parallel prop seq number of last transaction propagated';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.DISABLED IS
'Is propagation to destination disabled';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.JOB IS
'Number of job that pushes queue';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.LAST_TXN_COUNT IS
'Number of transactions pushed during last attempt';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.LAST_ERROR_NUMBER IS
'Oracle error number from last push';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.LAST_ERROR_MESSAGE IS
'Error message from last push';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.CATCHUP IS
'Used to break transaction into pieces';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.ALTERNATE IS
'Used to break transaction into pieces';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.TOTAL_TXN_COUNT IS
'Total number of transactions pushed';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.TOTAL_PROP_TIME_THROUGHPUT IS
'Total propagation time in seconds for measuring throughput';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.TOTAL_PROP_TIME_LATENCY IS
'Total propagation time in seconds for measuring latency';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.TO_COMMUNICATION_SIZE IS
'Total number of bytes sent to this dblink';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.FROM_COMMUNICATION_SIZE IS
'Total number of bytes received from this dblink';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.SPARE1 IS
'Total number of round trips for this dblink';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.SPARE2 IS
'Total number of administrative requests';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.SPARE3 IS
'Total number of error transactions pushed';

COMMENT ON COLUMN NULLID.DEF$_DESTINATION.SPARE4 IS
'Total time in seconds spent sleeping during push';

COMMENT ON COLUMN NULLID.DEF$_ORIGIN.ORIGIN_DB IS
'Originating database for the deferred transaction';

COMMENT ON COLUMN NULLID.DEF$_ORIGIN.ORIGIN_DBLINK IS
'Database link from deferred transaction origin to this site';

COMMENT ON COLUMN NULLID.DEF$_ORIGIN.INUSR IS
'Connected user receiving the deferred transaction';

COMMENT ON COLUMN NULLID.DEF$_ORIGIN.CSCN IS
'Prepare SCN assigned at origin site';

COMMENT ON COLUMN NULLID.DEF$_ORIGIN.ENQ_TID IS
'Transaction id assigned at origin site';

COMMENT ON COLUMN NULLID.DEF$_ORIGIN.RECO_SEQ_NO IS
'Deferred transaction sequence number for recovery';

COMMENT ON COLUMN NULLID.DEF$_ORIGIN.CATCHUP IS
'Used to break transaction into pieces';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY.SNAME IS
'Name of the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY.PRIORITY_GROUP IS
'Name of the priority group';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY.PRIORITY IS
'Priority of the value';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY.RAW_VALUE IS
'Raw value';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY.CHAR_VALUE IS
'Blank-padded character string';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY.NUMBER_VALUE IS
'Numeric value';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY.DATE_VALUE IS
'Date value';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY.VARCHAR2_VALUE IS
'Character string';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY.NCHAR_VALUE IS
'NCHAR string';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY.NVARCHAR2_VALUE IS
'NVARCHAR2 string';

COMMENT ON COLUMN NULLID.REPCAT$_PRIORITY.LARGE_CHAR_VALUE IS
'Blank-padded character string over 255 characters';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_ATTRIBUTE.ATTRIBUTE IS
'Description of the attribute';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_ATTRIBUTE.DATA_TYPE_ID IS
'Datatype of the attribute value';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_ATTRIBUTE.DATA_LENGTH IS
'Length of the attribute value in byte';

COMMENT ON COLUMN NULLID.REPCAT$_AUDIT_ATTRIBUTE.SOURCE IS
'Name of the function which returns the attribute value';

COMMENT ON COLUMN NULLID.DEF$_ERROR.ENQ_TID IS
'The ID of the transaction that created the error';

COMMENT ON COLUMN NULLID.DEF$_ERROR.ORIGIN_TRAN_DB IS
'The database originating the deferred transaction';

COMMENT ON COLUMN NULLID.DEF$_ERROR.ORIGIN_ENQ_TID IS
'The original ID of the transaction';

COMMENT ON COLUMN NULLID.DEF$_ERROR.DESTINATION IS
'Database link used to address destination';

COMMENT ON COLUMN NULLID.DEF$_ERROR.STEP_NO IS
'Unique ID of call that caused an error';

COMMENT ON COLUMN NULLID.DEF$_ERROR.RECEIVER IS
'User ID of the original receiver';

COMMENT ON COLUMN NULLID.DEF$_ERROR.ENQ_TIME IS
'Time original transaction enqueued';

COMMENT ON COLUMN NULLID.DEF$_ERROR.ERROR_NUMBER IS
'Oracle error number';

COMMENT ON COLUMN NULLID.DEF$_ERROR.ERROR_MSG IS
'Error message text';

COMMENT ON COLUMN NULLID.REPCAT$_SITES_NEW.EXTENSION_ID IS
'Globally unique identifier for replication extension';

COMMENT ON COLUMN NULLID.REPCAT$_SITES_NEW.GOWNER IS
'Owner of the object group';

COMMENT ON COLUMN NULLID.REPCAT$_SITES_NEW.GNAME IS
'Name of the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_SITES_NEW.DBLINK IS
'A database site that will replicate the object group';

COMMENT ON COLUMN NULLID.REPCAT$_SITES_NEW.FULL_INSTANTIATION IS
'Y if the database uses full-database export or change-based recovery';

COMMENT ON COLUMN NULLID.REPCAT$_SITES_NEW.MASTER_STATUS IS
'Instantiation status of the new master';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.SNAME IS
'Name of the object owner';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.ONAME IS
'Name of the object';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.TYPE IS
'Type of the object';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.CNAME IS
'Column name';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.LCNAME IS
'Long column name';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.TOID IS
'Type object identifier of a user-defined type';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.VERSION# IS
'Version# of a column of user-defined type';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.HASHCODE IS
'Hashcode of a column of user-defined type';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.ID IS
'Column ID';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.POS IS
'Ordering of column used as IN parameter in the replication procedures';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.TOP IS
'Top column name for an attribute';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.FLAG IS
'Replication information about column';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.CTYPE IS
'Type of the column';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.LENGTH IS
'Length of the column in bytes';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.PRECISION# IS
'Length: decimal digits (NUMBER) or binary digits (FLOAT)';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.SCALE IS
'Digits to right of decimal point in a number';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.NULL$ IS
'Does column allow NULL values?';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.CHARSETID IS
'Character set identifier';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.CHARSETFORM IS
'Character set form';

COMMENT ON COLUMN NULLID.REPCAT$_REPCOLUMN.CLENGTH IS
'The maximum length of the column in characters';

COMMENT ON COLUMN NULLID.REPCAT$_USER_PARM_VALUES.USER_PARAMETER_ID IS
'Internal primary key of the REPCAT$_USER_PARM_VALUES table.';

COMMENT ON COLUMN NULLID.REPCAT$_USER_PARM_VALUES.TEMPLATE_PARAMETER_ID IS
'Internal primary key of the REPCAT$_TEMPLATE_PARMS table.';

COMMENT ON COLUMN NULLID.REPCAT$_USER_PARM_VALUES.USER_ID IS
'Database user id.';

COMMENT ON COLUMN NULLID.REPCAT$_USER_PARM_VALUES.PARM_VALUE IS
'Value of the parameter for this user.';

COMMENT ON COLUMN NULLID.DEF$_PUSHED_TRANSACTIONS.SOURCE_SITE_ID IS
'Originating database identifier for the deferred transaction';

COMMENT ON COLUMN NULLID.DEF$_PUSHED_TRANSACTIONS.LAST_TRAN_ID IS
'Last committed transaction';

COMMENT ON COLUMN NULLID.DEF$_PUSHED_TRANSACTIONS.DISABLED IS
'Disable propagation';

COMMENT ON COLUMN NULLID.DEF$_PUSHED_TRANSACTIONS.SOURCE_SITE IS
'Obsolete - do not use';

COMMENT ON COLUMN NULLID.REPCAT$_GROUPED_COLUMN.SNAME IS
'Owner of replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_GROUPED_COLUMN.ONAME IS
'Name of the replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_GROUPED_COLUMN.GROUP_NAME IS
'Name of the column group';

COMMENT ON COLUMN NULLID.REPCAT$_GROUPED_COLUMN.COLUMN_NAME IS
'Name of the column in the column group';

COMMENT ON COLUMN NULLID.REPCAT$_GROUPED_COLUMN.POS IS
'Position of a column or an attribute in the table';

COMMENT ON COLUMN NULLID.REPCAT$_USER_AUTHORIZATIONS.USER_AUTHORIZATION_ID IS
'Internal primary key of the REPCAT$_USER_AUTHORIZATIONS table.';

COMMENT ON COLUMN NULLID.REPCAT$_USER_AUTHORIZATIONS.USER_ID IS
'Database user id.';

COMMENT ON COLUMN NULLID.REPCAT$_USER_AUTHORIZATIONS.REFRESH_TEMPLATE_ID IS
'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVORS.FLAVOR_ID IS
'Flavor identifier, unique within object group';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVORS.GOWNER IS
'Owner of the object group';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVORS.GNAME IS
'Name of the object group';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVORS.FNAME IS
'Name of the flavor';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVORS.CREATION_DATE IS
'Date on which the flavor was created';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVORS.CREATED_BY IS
'Identifier of user that created the flavor';

COMMENT ON COLUMN NULLID.REPCAT$_FLAVORS.PUBLISHED IS
'Indicates whether flavor is published (Y/N) or obsolete (O)';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION_STATISTICS.SNAME IS
'Owner of replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION_STATISTICS.ONAME IS
'Name of the replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION_STATISTICS.CONFLICT_TYPE_ID IS
'Type of conflict';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION_STATISTICS.REFERENCE_NAME IS
'Table name, unique constraint name, or column group name';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION_STATISTICS.METHOD_NAME IS
'Name of the conflict resolution method';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION_STATISTICS.FUNCTION_NAME IS
'Name of the resolution function';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION_STATISTICS.PRIORITY_GROUP IS
'Name of the priority group used in conflict resolution';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION_STATISTICS.RESOLVED_DATE IS
'Timestamp for the resolution of the conflict';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION_STATISTICS.PRIMARY_KEY_VALUE IS
'Primary key of the replicated row (character data)';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_PARMS.TEMPLATE_PARAMETER_ID IS
'Internal primary key of the REPCAT$_TEMPLATE_PARMS table.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_PARMS.REFRESH_TEMPLATE_ID IS
'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_PARMS.PARAMETER_NAME IS
'name of the parameter.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_PARMS.DEFAULT_PARM_VALUE IS
'Default value for the parameter.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_PARMS.PROMPT_STRING IS
'String for use in prompting for parameter values.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_PARMS.USER_OVERRIDE IS
'User override flag.';

COMMENT ON COLUMN NULLID.REPCAT$_DDL.LOG_ID IS
'Identifying number of the repcat log record';

COMMENT ON COLUMN NULLID.REPCAT$_DDL.SOURCE IS
'Name of the database at which the request originated';

COMMENT ON COLUMN NULLID.REPCAT$_DDL.ROLE IS
'Is this database the masterdef for the request';

COMMENT ON COLUMN NULLID.REPCAT$_DDL.MASTER IS
'Name of the database that processes this request';

COMMENT ON COLUMN NULLID.REPCAT$_DDL.LINE IS
'Ordering of records within a single request';

COMMENT ON COLUMN NULLID.REPCAT$_DDL.TEXT IS
'Portion of an argument';

COMMENT ON COLUMN NULLID.REPCAT$_DDL.DDL_NUM IS
'Ordering of DDLs to execute';

COMMENT ON COLUMN NULLID.REPCAT$_SITE_OBJECTS.TEMPLATE_SITE_ID IS
'Internal primary key of the template sites table.';

COMMENT ON COLUMN NULLID.REPCAT$_SITE_OBJECTS.SNAME IS
'Schema containing the deployed database object.';

COMMENT ON COLUMN NULLID.REPCAT$_SITE_OBJECTS.ONAME IS
'Name of the deployed database object.';

COMMENT ON COLUMN NULLID.REPCAT$_SITE_OBJECTS.OBJECT_TYPE_ID IS
'Internal ID of the object type of the deployed database object.';

COMMENT ON COLUMN NULLID.DEF$_TEMP$LOB.TEMP$BLOB IS
'Binary LOB (deferred) RPC parameter';

COMMENT ON COLUMN NULLID.DEF$_TEMP$LOB.TEMP$CLOB IS
'Character LOB (deferred) RPC parameter';

COMMENT ON COLUMN NULLID.DEF$_TEMP$LOB.TEMP$NCLOB IS
'National Character LOB (deferred) RPC parameter';

COMMENT ON COLUMN NULLID.REPCAT$_PARAMETER_COLUMN.SNAME IS
'Owner of replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_PARAMETER_COLUMN.ONAME IS
'Name of the replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_PARAMETER_COLUMN.CONFLICT_TYPE_ID IS
'Type of conflict';

COMMENT ON COLUMN NULLID.REPCAT$_PARAMETER_COLUMN.REFERENCE_NAME IS
'Table name, unique constraint name, or column group name';

COMMENT ON COLUMN NULLID.REPCAT$_PARAMETER_COLUMN.SEQUENCE_NO IS
'Ordering on resolution';

COMMENT ON COLUMN NULLID.REPCAT$_PARAMETER_COLUMN.PARAMETER_TABLE_NAME IS
'Name of the table to which the parameter column belongs';

COMMENT ON COLUMN NULLID.REPCAT$_PARAMETER_COLUMN.PARAMETER_COLUMN_NAME IS
'Name of the parameter column used for resolving the conflict';

COMMENT ON COLUMN NULLID.REPCAT$_PARAMETER_COLUMN.PARAMETER_SEQUENCE_NO IS
'Ordering on parameter column';

COMMENT ON COLUMN NULLID.REPCAT$_PARAMETER_COLUMN.COLUMN_POS IS
'Column position of an attribute or a column';

COMMENT ON COLUMN NULLID.REPCAT$_PARAMETER_COLUMN.ATTRIBUTE_SEQUENCE_NO IS
'Sequence number for an attribute of an ADT/pkREF column or a scalar column';

COMMENT ON COLUMN NULLID.DEF$_PROPAGATOR.USERID IS
'User ID of the propagator';

COMMENT ON COLUMN NULLID.DEF$_PROPAGATOR.USERNAME IS
'User name of the propagator';

COMMENT ON COLUMN NULLID.DEF$_PROPAGATOR.CREATED IS
'The time when the propagator is registered';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_REFGROUPS.REFRESH_GROUP_ID IS
'Internal primary key of the refresh groups table.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_REFGROUPS.REFRESH_GROUP_NAME IS
'Name of the refresh group';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_REFGROUPS.REFRESH_TEMPLATE_ID IS
'Primary key of the template containing the refresh group.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_REFGROUPS.ROLLBACK_SEG IS
'Name of the rollback segment to use during refresh.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_REFGROUPS.START_DATE IS
'Refresh start date.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_REFGROUPS.INTERVAL IS
'Refresh interval.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_STATUS.TEMPLATE_STATUS_ID IS
'Internal primary key for the template status table.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_STATUS.STATUS_TYPE_NAME IS
'User friendly name for the template status.';

COMMENT ON COLUMN NULLID.REPCAT$_REPPROP.SNAME IS
'Name of the object owner';

COMMENT ON COLUMN NULLID.REPCAT$_REPPROP.ONAME IS
'Name of the object';

COMMENT ON COLUMN NULLID.REPCAT$_REPPROP.TYPE IS
'Type of the object';

COMMENT ON COLUMN NULLID.REPCAT$_REPPROP.DBLINK IS
'Destination database for propagation';

COMMENT ON COLUMN NULLID.REPCAT$_REPPROP.HOW IS
'Propagation choice for the destination database';

COMMENT ON COLUMN NULLID.REPCAT$_REPPROP.PROPAGATE_COMMENT IS
'Description of the propagation choice';

COMMENT ON COLUMN NULLID.REPCAT$_REPPROP.DELIVERY_ORDER IS
'Value of delivery order when the master was added';

COMMENT ON COLUMN NULLID.REPCAT$_REPPROP.RECIPIENT_KEY IS
'Recipient key for sname and oname, used in joining with def$_aqcall';

COMMENT ON COLUMN NULLID.REPCAT$_REPPROP.EXTENSION_ID IS
'Identifier of any active extension request';

COMMENT ON COLUMN NULLID.REPCAT$_OBJECT_PARMS.TEMPLATE_PARAMETER_ID IS
'Primary key of template parameter.';

COMMENT ON COLUMN NULLID.REPCAT$_OBJECT_PARMS.TEMPLATE_OBJECT_ID IS
'Primary key of object using the paramter.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_TYPES.TEMPLATE_TYPE_ID IS
'Internal primary key of the template types table.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_TYPES.TEMPLATE_DESCRIPTION IS
'Description of the template type.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_TYPES.FLAGS IS
'Bitmap flags controlling each type of template.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_TYPES.SPARE1 IS
'Reserved for future expansion.';

COMMENT ON COLUMN NULLID.REPCAT$_CONFLICT.SNAME IS
'Owner of replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_CONFLICT.ONAME IS
'Name of the replicated object';

COMMENT ON COLUMN NULLID.REPCAT$_CONFLICT.CONFLICT_TYPE_ID IS
'Type of conflict';

COMMENT ON COLUMN NULLID.REPCAT$_CONFLICT.REFERENCE_NAME IS
'Table name, unique constraint name, or column group name';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.TEMPLATE_OBJECT_ID IS
'Internal primary key of the REPCAT$_TEMPLATE_OBJECTS table.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.REFRESH_TEMPLATE_ID IS
'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.OBJECT_NAME IS
'Name of the database object.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.OBJECT_TYPE IS
'Type of database object.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.OBJECT_VERSION# IS
'Version# of database object of TYPE.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.DDL_TEXT IS
'DDL string for creating the object or WHERE clause for snapshot query.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.MASTER_ROLLBACK_SEG IS
'Rollback segment for use during snapshot refreshes.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.DERIVED_FROM_SNAME IS
'Schema name of schema containing object this was derived from.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.DERIVED_FROM_ONAME IS
'Object name of object this object was derived from.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.FLAVOR_ID IS
'Foreign key to the REPCAT$_FLAVORS table.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.SCHEMA_NAME IS
'Schema containing the object.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.DDL_NUM IS
'Order of ddls to execute.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.TEMPLATE_REFGROUP_ID IS
'Internal ID of the refresh group to contain the object.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.FLAGS IS
'Internal flags for the object.';

COMMENT ON COLUMN NULLID.REPCAT$_TEMPLATE_OBJECTS.SPARE1 IS
'Reserved for future use.';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION_METHOD.CONFLICT_TYPE_ID IS
'Type of conflict';

COMMENT ON COLUMN NULLID.REPCAT$_RESOLUTION_METHOD.METHOD_NAME IS
'Name of the conflict resolution method';

COMMENT ON COLUMN NULLID.REPCAT$_GENERATED.SNAME IS
'Schema containing the generated object';

COMMENT ON COLUMN NULLID.REPCAT$_GENERATED.ONAME IS
'Name of the generated object';

COMMENT ON COLUMN NULLID.REPCAT$_GENERATED.TYPE IS
'Type of the generated object';

COMMENT ON COLUMN NULLID.REPCAT$_GENERATED.REASON IS
'Reason the object was generated';

COMMENT ON COLUMN NULLID.REPCAT$_GENERATED.BASE_SNAME IS
'Name of the object''s owner';

COMMENT ON COLUMN NULLID.REPCAT$_GENERATED.BASE_ONAME IS
'Name of the object';

COMMENT ON COLUMN NULLID.REPCAT$_GENERATED.BASE_TYPE IS
'Type of the object';

COMMENT ON COLUMN NULLID.REPCAT$_GENERATED.PACKAGE_PREFIX IS
'Prefix for package wrapper';

COMMENT ON COLUMN NULLID.REPCAT$_GENERATED.PROCEDURE_PREFIX IS
'Procedure prefix for package wrapper or procedure wrapper';

COMMENT ON COLUMN NULLID.REPCAT$_GENERATED.DISTRIBUTED IS
'Is the generated object separately generated at each master';

COMMENT ON COLUMN NULLID.REPCAT$_REPSCHEMA.GOWNER IS
'Owner of the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPSCHEMA.SNAME IS
'Name of the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPSCHEMA.DBLINK IS
'A database site replicating the object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPSCHEMA.MASTERDEF IS
'Is the database the master definition site for the replicated object group';

COMMENT ON COLUMN NULLID.REPCAT$_REPSCHEMA.SNAPMASTER IS
'For a snapshot site, is this the current refresh_master';

COMMENT ON COLUMN NULLID.REPCAT$_REPSCHEMA.MASTER_COMMENT IS
'Description of the database site';

COMMENT ON COLUMN NULLID.REPCAT$_REPSCHEMA.MASTER IS
'Redundant information from repcat$_repcat.master';

COMMENT ON COLUMN NULLID.REPCAT$_REPSCHEMA.PROP_UPDATES IS
'Number of requested updates for master in repcat$_repprop';

COMMENT ON COLUMN NULLID.REPCAT$_REPSCHEMA.MY_DBLINK IS
'A sanity check after import: is this master the current site';

COMMENT ON COLUMN NULLID.REPCAT$_REPSCHEMA.EXTENSION_ID IS
'Dummy column for foreign key';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.REFRESH_TEMPLATE_ID IS
'Internal primary key of the REPCAT$_REFRESH_TEMPLATES table.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.OWNER IS
'Owner of the refresh group template.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.REFRESH_GROUP_NAME IS
'Name of the refresh group to create during instantiation.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.REFRESH_TEMPLATE_NAME IS
'Name of the refresh group template.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.TEMPLATE_COMMENT IS
'Optional comment field for the refresh group template.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.PUBLIC_TEMPLATE IS
'Flag specifying public template or private template.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.LAST_MODIFIED IS
'Date the row was last modified.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.MODIFIED_BY IS
'User id of the user that modified the row.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.CREATION_DATE IS
'Date the row was created.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.CREATED_BY IS
'User id of the user that created the row.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.REFRESH_GROUP_ID IS
'Internal primary key to default refresh group for the template.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.TEMPLATE_TYPE_ID IS
'Internal primary key to the template types.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.TEMPLATE_STATUS_ID IS
'Internal primary key to the template status table.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.FLAGS IS
'Internal flags for the template.';

COMMENT ON COLUMN NULLID.REPCAT$_REFRESH_TEMPLATES.SPARE1 IS
'Reserved for future use.';

COMMENT ON COLUMN NULLID.DEF$_CALLDEST.ENQ_TID IS
'Transaction ID';

COMMENT ON COLUMN NULLID.DEF$_CALLDEST.STEP_NO IS
'Unique ID of call within transaction';

COMMENT ON COLUMN NULLID.DEF$_CALLDEST.DBLINK IS
'The destination database';

COMMENT ON COLUMN NULLID.DEF$_CALLDEST.SCHEMA_NAME IS
'The schema of the deferred remote procedure call';

COMMENT ON COLUMN NULLID.DEF$_CALLDEST.PACKAGE_NAME IS
'The package of the deferred remote procedure call';

COMMENT ON COLUMN NULLID.DEF$_CALLDEST.CATCHUP IS
'Dummy column for foreign key';

COMMENT ON COLUMN NULLID.REPCAT$_KEY_COLUMNS.SNAME IS
'Schema containing table';

COMMENT ON COLUMN NULLID.REPCAT$_KEY_COLUMNS.ONAME IS
'Name of the table';

COMMENT ON COLUMN NULLID.REPCAT$_KEY_COLUMNS.TYPE IS
'Type identifier';

COMMENT ON COLUMN NULLID.REPCAT$_KEY_COLUMNS.COL IS
'Column in the table';

COMMENT ON TABLE SYSTEM.MVIEW$_ADV_EXCEPTIONS IS
'Output table for dimension validations';

COMMENT ON TABLE SYSTEM.MVIEW_WORKLOAD IS
'This view gives DBA access to shared workload';

COMMENT ON TABLE SYSTEM.MVIEW$_ADV_OUTPUT IS
'Output table for summary recommendations and evaluations';

COMMENT ON TABLE SYSTEM.MVIEW_EXCEPTIONS IS
'This view gives DBA access to dimension validation results';

COMMENT ON TABLE SYSTEM.MVIEW_FILTERINSTANCE IS
'Workload filter instance records';

COMMENT ON TABLE SYSTEM.MVIEW_FILTER IS
'Workload filter records';

COMMENT ON TABLE SYSTEM.MVIEW$_ADV_FILTER IS
'Table for workload filter definition';

COMMENT ON TABLE SYSTEM.MVIEW$_ADV_FILTERINSTANCE IS
'Table for workload filter instance definition';

COMMENT ON TABLE SYSTEM.MVIEW_LOG IS
'Advisor session log';

COMMENT ON TABLE SYSTEM.MVIEW_EVALUATIONS IS
'This view gives DBA access to summary evaluation output';

COMMENT ON TABLE SYSTEM.MVIEW_RECOMMENDATIONS IS
'This view gives DBA access to summary recommendations';

COMMENT ON TABLE SYSTEM.MVIEW$_ADV_WORKLOAD IS
'Shared workload repository for DBA users of summary advisor';

COMMENT ON TABLE SYSTEM.MVIEW$_ADV_LOG IS
'Log all calls to summary advisory functions';

